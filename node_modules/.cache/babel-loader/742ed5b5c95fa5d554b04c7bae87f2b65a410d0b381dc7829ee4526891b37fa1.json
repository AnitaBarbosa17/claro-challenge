{"ast":null,"code":"import axios from \"axios\";\nimport { setChannelList } from '../store/slices/channels';\nimport { setEpgList } from '../store/slices/epg';\nexport const toISOStringWithTimezone = date => {\n  const tzOffset = -date.getTimezoneOffset();\n  const diff = tzOffset >= 0 ? '+' : '-';\n  const pad = n => `${Math.floor(Math.abs(n))}`.padStart(2, '0');\n  return date.getFullYear() + '-' + pad(date.getMonth() + 1) + '-' + pad(date.getDate()) + 'T' + pad(date.getHours()) + ':' + pad(date.getMinutes()) + ':' + pad(date.getSeconds()) + diff + pad(tzOffset / 60) + ':' + pad(tzOffset % 60);\n};\nconst formatDate = date => {\n  const getDate = toISOStringWithTimezone(date);\n  return getDate.slice(-25).replace(/\\D/g, '').slice(0, 14);\n};\nconst date = new Date();\nconst dateSince = formatDate(date);\nconst dateTill = formatDate(new Date(date.setDate(date.getDate() + 1)));\nconst API_URL = `https://mfwkweb-api.clarovideo.net/services/epg/channel?device_id=web&device_category=web&device_model=web&device_type=web&device_so=Chrome&format=json&device_manufacturer=generic&authpn=webclient&authpt=tfg1h3j4k6fd7&api_version=v5.93&region=guatemala&HKS=web61144bb49d549&user_id=54343080&date_from=${dateSince}&date_to=${dateTill}&quantity=60`;\nconst transformChannels = channels => {\n  return channels.map(channel => {\n    return {\n      uuid: channel.id,\n      title: channel.name,\n      logo: channel.image\n    };\n  });\n};\nconst transformEgp = channels => {\n  let epgList = [];\n  for (let channel of channels) {\n    const events = channel.events;\n    events.forEach(event => {\n      epgList.push({\n        channelUuid: event.channel_id,\n        id: event.id,\n        date_begin,\n        date_end,\n        since: event.date_begin,\n        till: event.date_end,\n        title: event.name,\n        description: event.description\n      });\n    });\n  }\n  return epgList;\n};\nexport const fetchAllChannels = () => async dispatch => {\n  await axios.get(API_URL).then(res => {\n    const response = res.data.response.channels;\n    const getChannelList = transformChannels(response);\n    const getEpgList = transformEgp(response);\n    dispatch(setChannelList(getChannelList));\n    dispatch(setEpgList(getEpgList));\n  }).catch(err => console.log(err));\n};","map":{"version":3,"names":["axios","setChannelList","setEpgList","toISOStringWithTimezone","date","tzOffset","getTimezoneOffset","diff","pad","n","Math","floor","abs","padStart","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","formatDate","slice","replace","Date","dateSince","dateTill","setDate","API_URL","transformChannels","channels","map","channel","uuid","id","title","name","logo","image","transformEgp","epgList","events","forEach","event","push","channelUuid","channel_id","date_begin","date_end","since","till","description","fetchAllChannels","dispatch","get","then","res","response","data","getChannelList","getEpgList","catch","err","console","log"],"sources":["/Users/anabarbosa/Code/Tests/react-redux-monkey/src/helpers/common.js"],"sourcesContent":["import axios from \"axios\";\nimport { setChannelList } from '../store/slices/channels';\nimport { setEpgList } from '../store/slices/epg';\n\nexport const toISOStringWithTimezone = date => {\n    const tzOffset = -date.getTimezoneOffset();\n    const diff = tzOffset >= 0 ? '+' : '-';\n    const pad = n => `${Math.floor(Math.abs(n))}`.padStart(2, '0');\n    return date.getFullYear() +\n        '-' + pad(date.getMonth() + 1) +\n        '-' + pad(date.getDate()) +\n        'T' + pad(date.getHours()) +\n        ':' + pad(date.getMinutes()) +\n        ':' + pad(date.getSeconds()) +\n        diff + pad(tzOffset / 60) +\n        ':' + pad(tzOffset % 60);\n};\n\nconst formatDate = date => {\n    const getDate = toISOStringWithTimezone(date)\n    return getDate.slice(-25).replace(/\\D/g,'').slice(0, 14)\n}\n\nconst date = new Date();\nconst dateSince = formatDate(date)\nconst dateTill = formatDate(new Date(date.setDate(date.getDate() + 1)));\n\nconst API_URL = `https://mfwkweb-api.clarovideo.net/services/epg/channel?device_id=web&device_category=web&device_model=web&device_type=web&device_so=Chrome&format=json&device_manufacturer=generic&authpn=webclient&authpt=tfg1h3j4k6fd7&api_version=v5.93&region=guatemala&HKS=web61144bb49d549&user_id=54343080&date_from=${dateSince}&date_to=${dateTill}&quantity=60`;\n\nconst transformChannels = (channels) => {\t\t\n\treturn channels.map(channel => {\n\t\treturn {\n\t\t\tuuid: channel.id,\n\t\t\ttitle: channel.name,\n\t\t\tlogo: channel.image,\n\t\t}\n\t});\n}\nconst transformEgp = (channels) => {\n\tlet epgList = [];\n\tfor( let channel of channels ){\n\t\tconst events = channel.events;\n\t\tevents.forEach(event => {\n\t\t\tepgList.push({\n\t\t\t\tchannelUuid: event.channel_id,\n\t\t\t\tid: event.id,\n\t\t\t\tdate_begin,\n\t\t\t\tdate_end,\n\t\t\t\tsince: event.date_begin,\n\t\t\t\ttill: event.date_end,\n\t\t\t\ttitle: event.name,\n\t\t\t\tdescription: event.description,\n\t\t\t})\n\t\t})\n\t\t\n\t}\n\treturn epgList;\n}\n\nexport const fetchAllChannels = () => async (dispatch) => {\n    await axios.get(API_URL)\n        .then((res) => {\n\t\t\tconst response = res.data.response.channels;\n\t\t\tconst getChannelList = transformChannels(response)\n\t\t\tconst getEpgList = transformEgp(response);\n\n            dispatch(setChannelList(getChannelList));\n            dispatch(setEpgList(getEpgList));\n        })\n        .catch((err) => console.log(err))\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}