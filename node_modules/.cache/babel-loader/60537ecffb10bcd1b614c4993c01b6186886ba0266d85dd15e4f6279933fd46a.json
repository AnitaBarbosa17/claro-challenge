{"ast":null,"code":"import axios from \"axios\";\nimport { setChannelList } from '../store/slices/channels';\nimport { channels } from \"./channels\";\nimport { epg } from \"./epg\";\nexport const toISOStringWithTimezone = date => {\n  const tzOffset = -date.getTimezoneOffset();\n  const diff = tzOffset >= 0 ? '+' : '-';\n  const pad = n => `${Math.floor(Math.abs(n))}`.padStart(2, '0');\n  return date.getFullYear() + '-' + pad(date.getMonth() + 1) + '-' + pad(date.getDate()) + 'T' + pad(date.getHours()) + ':' + pad(date.getMinutes()) + ':' + pad(date.getSeconds()) + diff + pad(tzOffset / 60) + ':' + pad(tzOffset % 60);\n};\nconst formatDate = date => {\n  const getDate = toISOStringWithTimezone(date);\n  return getDate.slice(-25).replace(/\\D/g, '').slice(0, 14);\n};\nconst date = new Date();\nconst dateSince = formatDate(date);\nconsole.log(\"ðŸš€ ~ file: common.js:27 ~ dateSince\", dateSince);\nconst dateTill = formatDate(new Date(date.setDate(date.getDate() + 1)));\nconsole.log(\"ðŸš€ ~ file: common.js:29 ~ dateTill\", dateTill);\nconst API_URL = `https://mfwkweb-api.clarovideo.net/services/epg/channel?device_id=web&device_category=web&device_model=web&device_type=web&device_so=Chrome&format=json&device_manufacturer=generic&authpn=webclient&authpt=tfg1h3j4k6fd7&api_version=v5.93&region=guatemala&HKS=web61144bb49d549&user_id=54343080&date_from=${dateSince}&date_to=${dateTill}&quantity=20`;\nconsole.log(API_URL);\nexport const fetchChannels = async () => new Promise(res => setTimeout(() => res(channels), 400));\nexport const fetchEpg = async () => new Promise(res => setTimeout(() => res(epg), 500));\nexport const fetchAllChannels = () => async dispatch => {\n  await axios.get(API_URL).then(res => {\n    dispatch(setChannelList(res.data.response.channels));\n  }).catch(err => console.log(err));\n};","map":{"version":3,"names":["axios","setChannelList","channels","epg","toISOStringWithTimezone","date","tzOffset","getTimezoneOffset","diff","pad","n","Math","floor","abs","padStart","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","formatDate","slice","replace","Date","dateSince","console","log","dateTill","setDate","API_URL","fetchChannels","Promise","res","setTimeout","fetchEpg","fetchAllChannels","dispatch","get","then","data","response","catch","err"],"sources":["/Users/anabarbosa/Code/Tests/react-redux-monkey/src/helpers/common.js"],"sourcesContent":["import axios from \"axios\";\nimport { setChannelList } from '../store/slices/channels';\nimport { channels } from \"./channels\";\nimport { epg } from \"./epg\";\n\nexport const toISOStringWithTimezone = date => {\n    const tzOffset = -date.getTimezoneOffset();\n    const diff = tzOffset >= 0 ? '+' : '-';\n    const pad = n => `${Math.floor(Math.abs(n))}`.padStart(2, '0');\n    return date.getFullYear() +\n        '-' + pad(date.getMonth() + 1) +\n        '-' + pad(date.getDate()) +\n        'T' + pad(date.getHours()) +\n        ':' + pad(date.getMinutes()) +\n        ':' + pad(date.getSeconds()) +\n        diff + pad(tzOffset / 60) +\n        ':' + pad(tzOffset % 60);\n};\n\nconst formatDate = date => {\n    const getDate = toISOStringWithTimezone(date)\n    return getDate.slice(-25).replace(/\\D/g,'').slice(0, 14)\n}\n\nconst date = new Date();\nconst dateSince = formatDate(date)\nconsole.log(\"ðŸš€ ~ file: common.js:27 ~ dateSince\", dateSince)\nconst dateTill = formatDate(new Date(date.setDate(date.getDate() + 1)));\nconsole.log(\"ðŸš€ ~ file: common.js:29 ~ dateTill\", dateTill)\n\nconst API_URL = `https://mfwkweb-api.clarovideo.net/services/epg/channel?device_id=web&device_category=web&device_model=web&device_type=web&device_so=Chrome&format=json&device_manufacturer=generic&authpn=webclient&authpt=tfg1h3j4k6fd7&api_version=v5.93&region=guatemala&HKS=web61144bb49d549&user_id=54343080&date_from=${dateSince}&date_to=${dateTill}&quantity=20`;\nconsole.log(API_URL)\n\nexport const fetchChannels = async () =>\n    new Promise((res) => setTimeout(() => res(channels), 400));\n\nexport const fetchEpg = async () =>\n    new Promise((res) => setTimeout(() => res(epg), 500));\n\nexport const fetchAllChannels = () => async (dispatch) => {\n    await axios.get(API_URL)\n        .then((res) => {\n            dispatch(setChannelList(res.data.response.channels));\n        })\n        .catch((err) => console.log(err))\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,0BAA0B;AACzD,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,GAAG,QAAQ,OAAO;AAE3B,OAAO,MAAMC,uBAAuB,GAAGC,IAAI,IAAI;EAC3C,MAAMC,QAAQ,GAAG,CAACD,IAAI,CAACE,iBAAiB,EAAE;EAC1C,MAAMC,IAAI,GAAGF,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG;EACtC,MAAMG,GAAG,GAAGC,CAAC,IAAK,GAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACH,CAAC,CAAC,CAAE,EAAC,CAACI,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC9D,OAAOT,IAAI,CAACU,WAAW,EAAE,GACrB,GAAG,GAAGN,GAAG,CAACJ,IAAI,CAACW,QAAQ,EAAE,GAAG,CAAC,CAAC,GAC9B,GAAG,GAAGP,GAAG,CAACJ,IAAI,CAACY,OAAO,EAAE,CAAC,GACzB,GAAG,GAAGR,GAAG,CAACJ,IAAI,CAACa,QAAQ,EAAE,CAAC,GAC1B,GAAG,GAAGT,GAAG,CAACJ,IAAI,CAACc,UAAU,EAAE,CAAC,GAC5B,GAAG,GAAGV,GAAG,CAACJ,IAAI,CAACe,UAAU,EAAE,CAAC,GAC5BZ,IAAI,GAAGC,GAAG,CAACH,QAAQ,GAAG,EAAE,CAAC,GACzB,GAAG,GAAGG,GAAG,CAACH,QAAQ,GAAG,EAAE,CAAC;AAChC,CAAC;AAED,MAAMe,UAAU,GAAGhB,IAAI,IAAI;EACvB,MAAMY,OAAO,GAAGb,uBAAuB,CAACC,IAAI,CAAC;EAC7C,OAAOY,OAAO,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAACC,OAAO,CAAC,KAAK,EAAC,EAAE,CAAC,CAACD,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;AAC5D,CAAC;AAED,MAAMjB,IAAI,GAAG,IAAImB,IAAI,EAAE;AACvB,MAAMC,SAAS,GAAGJ,UAAU,CAAChB,IAAI,CAAC;AAClCqB,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEF,SAAS,CAAC;AAC7D,MAAMG,QAAQ,GAAGP,UAAU,CAAC,IAAIG,IAAI,CAACnB,IAAI,CAACwB,OAAO,CAACxB,IAAI,CAACY,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACvES,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEC,QAAQ,CAAC;AAE3D,MAAME,OAAO,GAAI,gTAA+SL,SAAU,YAAWG,QAAS,cAAa;AAC3WF,OAAO,CAACC,GAAG,CAACG,OAAO,CAAC;AAEpB,OAAO,MAAMC,aAAa,GAAG,YACzB,IAAIC,OAAO,CAAEC,GAAG,IAAKC,UAAU,CAAC,MAAMD,GAAG,CAAC/B,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC;AAE9D,OAAO,MAAMiC,QAAQ,GAAG,YACpB,IAAIH,OAAO,CAAEC,GAAG,IAAKC,UAAU,CAAC,MAAMD,GAAG,CAAC9B,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;AAEzD,OAAO,MAAMiC,gBAAgB,GAAG,MAAM,MAAOC,QAAQ,IAAK;EACtD,MAAMrC,KAAK,CAACsC,GAAG,CAACR,OAAO,CAAC,CACnBS,IAAI,CAAEN,GAAG,IAAK;IACXI,QAAQ,CAACpC,cAAc,CAACgC,GAAG,CAACO,IAAI,CAACC,QAAQ,CAACvC,QAAQ,CAAC,CAAC;EACxD,CAAC,CAAC,CACDwC,KAAK,CAAEC,GAAG,IAAKjB,OAAO,CAACC,GAAG,CAACgB,GAAG,CAAC,CAAC;AACzC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}