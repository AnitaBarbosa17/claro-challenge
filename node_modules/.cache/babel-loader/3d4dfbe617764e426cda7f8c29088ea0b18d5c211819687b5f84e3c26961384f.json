{"ast":null,"code":"var _s = $RefreshSig$();\n// import {useMemo, useEffect, useState} from \"react\";\n// import { fetchAllChannels } from \"./helpers\";\n// import { useEpg } from \"planby\";\n// // Import theme\n// import { theme } from \"./helpers/theme\";\n// import { useDispatch, useSelector } from 'react-redux';\n\n// export function useApp() {\n\n// \tconst dispatch = useDispatch();\n\n// \tconst { list: channelsList } = useSelector(state => state.channels);\n// \tconst [epg, setEpg] = useState([]);\n// \tconst [channels, setChannels] = useState([]);\n// \tconst [isLoading, setIsLoading] = useState(false);\n\n// \tconst channelsData = useMemo(() => channels, [channels]);\n// \tconst epgData = useMemo(() => epg, [epg]);\n\n// \tconst handleGetEpg = () => {\n// \t\tlet epgList = [];\n// \t\tfor( let channel of channelsData ){\n// \t\t\tconst events = channel.events;\n// \t\t\tevents.forEach(event => {\n// \t\t\t\tepgList.push({\n// \t\t\t\t\t...event,\n// \t\t\t\t\tsince: new Date(event.date_begin).toISOString(),\n// \t\t\t\t\ttill: new Date(event.date_end).toISOString(),\n// \t\t\t\t\tid: event.id,\n// \t\t\t\t\ttitle: event.name,\n// \t\t\t\t\tdescription: event.description,\n// \t\t\t\t\tisYesterday: true,\n// \t\t\t\t\tchannelUuid: event.channel_id,\n// \t\t\t\t})\n// \t\t\t} )\n\n// \t\t}\n// \t\treturn epgList;\n// \t}\n\n// \tconst { getEpgProps, getLayoutProps } = useEpg({\n// \t\tchannels: channelsData,\n// \t\tepg: epgData,\n// \t\tdayWidth: 7200,\n// \t\tsidebarWidth: 100,\n// \t\titemHeight: 80,\n// \t\tisSidebar: true,\n// \t\tisTimeline: true,\n// \t\tisLine: true,\n// \t\tstartDate: \"2022-10-18T00:00:00\",\n// \t\tendDate: \"2022-10-18T24:00:00\",\n// \t\tisBaseTimeFormat: true,\n// \t\ttheme\n// \t});\n\n// \tuseEffect(() => {\n// \t\tsetEpg(handleGetEpg())\n// \t}, []);\n\n// \tuseEffect(() => {\n// \t\tconst getChannelsList = channelsList.map(channel => {\n// \t\t\treturn {\n// \t\t\t\t...channel,\n// \t\t\t\tuuid: channel.id\n// \t\t\t}\n// \t\t})\n// \t\tsetChannels(getChannelsList)\n// \t}, [channelsList]);\n\n// \tuseEffect(() => {\n// \t\tsetIsLoading(true)\n// \t\tdispatch(fetchAllChannels())\n// \t\tsetIsLoading(false)\n// \t}, [dispatch, isLoading]);\n\n// \treturn { getEpgProps, getLayoutProps, isLoading };\n// }\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchChannels, fetchEpg, fetchAllChannels } from \"./helpers\";\nimport { useEpg } from \"planby\";\n\n// Import theme\nimport { theme } from \"./helpers/theme\";\nexport function useApp() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    list: channelsList\n  } = useSelector(state => state.channels);\n  const [channels, setChannels] = React.useState([]);\n  const [epg, setEpg] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const channelsData = React.useMemo(() => channels, [channels]);\n  const epgData = React.useMemo(() => epg, [epg]);\n  const {\n    getEpgProps,\n    getLayoutProps\n  } = useEpg({\n    channels: channelsData,\n    epg: epgData,\n    dayWidth: 7200,\n    sidebarWidth: 100,\n    itemHeight: 80,\n    isSidebar: true,\n    isTimeline: true,\n    isLine: true,\n    startDate: \"2022-10-18T00:00:00\",\n    endDate: \"2022-10-18T24:00:00\",\n    isBaseTimeFormat: true,\n    theme\n  });\n  const handleFetchResources = React.useCallback(async () => {\n    setIsLoading(true);\n    const epg = await fetchEpg();\n    const channels = await fetchChannels();\n    const transformChannels = channels => {\n      return channels.map(channel => {\n        return {\n          uuid: channel.id,\n          type: \"channel\",\n          title: channel.name,\n          logo: channel.image,\n          year: 2002\n        };\n      });\n    };\n    const handleGetEpg = () => {\n      let epgList = [];\n      for (let channel of channelsList) {\n        const events = channel.events;\n        events.forEach(event => {\n          epgList.push({\n            since: new Date(event.date_begin).toISOString(),\n            till: new Date(event.date_end).toISOString(),\n            id: event.id,\n            title: event.name,\n            description: event.description,\n            isYesterday: true,\n            channelUuid: event.channel_id,\n            Type: \"series\",\n            totalSeasons: 1,\n            Response: \"True\",\n            image: \"https://www.themoviedb.org/t/p/w1066_and_h600_bestv2/sjx6zjQI2dLGtEL0HGWsnq6UyLU.jpg\",\n            country: \"Ghana\",\n            Year: \"2021â€“\",\n            Rated: \"TV-14\",\n            Released: \"29 Dec 2021\",\n            Runtime: \"N/A\",\n            Genre: \"Action, Adventure, Sci-Fi\",\n            Director: \"N/A\",\n            Writer: \"Jon Favreau\",\n            Actors: \"Temuera Morrison, Ming-Na Wen, Matt Berry\",\n            Language: \"English\",\n            Country: \"United States\",\n            Awards: \"N/A\",\n            Metascore: \"N/A\",\n            imdbRating: 8.0,\n            imdbVotes: \"20,147\",\n            imdbID: \"tt13668894\",\n            Type: \"series\",\n            totalSeasons: \"1\",\n            Response: \"True\",\n            Ratings: [{\n              Source: \"Internet Movie Database\",\n              Value: \"8.0/10\"\n            }],\n            rating: 3\n          });\n        });\n      }\n      return epgList;\n    };\n    console.log(\"ğŸš€ ~ file: useApp.js:121 ~ handleFetchResources ~ channelsList\", transformChannels(channelsList));\n    console.log(\"ğŸš€ ~ file: useApp.js:121 ~ handleFetchResources ~ handleGetEpg\", handleGetEpg(channelsList));\n    setEpg(handleGetEpg(channelsList));\n    // setChannels(channels);\n    setChannels(transformChannels(channelsList));\n    setIsLoading(false);\n  }, []);\n  React.useEffect(() => {\n    handleFetchResources();\n  }, [handleFetchResources]);\n  React.useEffect(() => {\n    setIsLoading(true);\n    dispatch(fetchAllChannels());\n    setIsLoading(false);\n  }, [dispatch, isLoading]);\n  return {\n    getEpgProps,\n    getLayoutProps,\n    isLoading\n  };\n}\n_s(useApp, \"JfeeD0nLL7/vNV3n/mZD40Mlo28=\", false, function () {\n  return [useDispatch, useSelector, useEpg];\n});","map":{"version":3,"names":["React","useDispatch","useSelector","fetchChannels","fetchEpg","fetchAllChannels","useEpg","theme","useApp","dispatch","list","channelsList","state","channels","setChannels","useState","epg","setEpg","isLoading","setIsLoading","channelsData","useMemo","epgData","getEpgProps","getLayoutProps","dayWidth","sidebarWidth","itemHeight","isSidebar","isTimeline","isLine","startDate","endDate","isBaseTimeFormat","handleFetchResources","useCallback","transformChannels","map","channel","uuid","id","type","title","name","logo","image","year","handleGetEpg","epgList","events","forEach","event","push","since","Date","date_begin","toISOString","till","date_end","description","isYesterday","channelUuid","channel_id","Type","totalSeasons","Response","country","Year","Rated","Released","Runtime","Genre","Director","Writer","Actors","Language","Country","Awards","Metascore","imdbRating","imdbVotes","imdbID","Ratings","Source","Value","rating","console","log","useEffect"],"sources":["/Users/anabarbosa/Code/Tests/react-redux-monkey/src/useApp.js"],"sourcesContent":["// import {useMemo, useEffect, useState} from \"react\";\n// import { fetchAllChannels } from \"./helpers\";\n// import { useEpg } from \"planby\";\n// // Import theme\n// import { theme } from \"./helpers/theme\";\n// import { useDispatch, useSelector } from 'react-redux';\n\n// export function useApp() {\n\t\n// \tconst dispatch = useDispatch();\n\n// \tconst { list: channelsList } = useSelector(state => state.channels);\n// \tconst [epg, setEpg] = useState([]);\n// \tconst [channels, setChannels] = useState([]);\n// \tconst [isLoading, setIsLoading] = useState(false);\n\t\n// \tconst channelsData = useMemo(() => channels, [channels]);\n// \tconst epgData = useMemo(() => epg, [epg]);\n\n// \tconst handleGetEpg = () => {\n// \t\tlet epgList = [];\n// \t\tfor( let channel of channelsData ){\n// \t\t\tconst events = channel.events;\n// \t\t\tevents.forEach(event => {\n// \t\t\t\tepgList.push({\n// \t\t\t\t\t...event,\n// \t\t\t\t\tsince: new Date(event.date_begin).toISOString(),\n// \t\t\t\t\ttill: new Date(event.date_end).toISOString(),\n// \t\t\t\t\tid: event.id,\n// \t\t\t\t\ttitle: event.name,\n// \t\t\t\t\tdescription: event.description,\n// \t\t\t\t\tisYesterday: true,\n// \t\t\t\t\tchannelUuid: event.channel_id,\n// \t\t\t\t})\n// \t\t\t} )\n\t\t\t\n// \t\t}\n// \t\treturn epgList;\n// \t}\n\n// \tconst { getEpgProps, getLayoutProps } = useEpg({\n// \t\tchannels: channelsData,\n// \t\tepg: epgData,\n// \t\tdayWidth: 7200,\n// \t\tsidebarWidth: 100,\n// \t\titemHeight: 80,\n// \t\tisSidebar: true,\n// \t\tisTimeline: true,\n// \t\tisLine: true,\n// \t\tstartDate: \"2022-10-18T00:00:00\",\n// \t\tendDate: \"2022-10-18T24:00:00\",\n// \t\tisBaseTimeFormat: true,\n// \t\ttheme\n// \t});\n\n// \tuseEffect(() => {\n// \t\tsetEpg(handleGetEpg())\n// \t}, []);\n\t\n// \tuseEffect(() => {\n// \t\tconst getChannelsList = channelsList.map(channel => {\n// \t\t\treturn {\n// \t\t\t\t...channel,\n// \t\t\t\tuuid: channel.id\n// \t\t\t}\n// \t\t})\n// \t\tsetChannels(getChannelsList)\n// \t}, [channelsList]);\n\t\n// \tuseEffect(() => {\n// \t\tsetIsLoading(true)\n// \t\tdispatch(fetchAllChannels())\n// \t\tsetIsLoading(false)\n// \t}, [dispatch, isLoading]);\n\n// \treturn { getEpgProps, getLayoutProps, isLoading };\n// }\n\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchChannels, fetchEpg, fetchAllChannels } from \"./helpers\";\n\nimport { useEpg } from \"planby\";\n\n// Import theme\nimport { theme } from \"./helpers/theme\";\n\nexport function useApp() {\n\tconst dispatch = useDispatch();\n\tconst { list: channelsList } = useSelector(state => state.channels);\n  const [channels, setChannels] = React.useState([]);\n  const [epg, setEpg] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const channelsData = React.useMemo(() => channels, [channels]);\n  const epgData = React.useMemo(() => epg, [epg]);\n\n  const { getEpgProps, getLayoutProps } = useEpg({\n    channels: channelsData,\n    epg: epgData,\n    dayWidth: 7200,\n    sidebarWidth: 100,\n    itemHeight: 80,\n    isSidebar: true,\n    isTimeline: true,\n    isLine: true,\n    startDate: \"2022-10-18T00:00:00\",\n    endDate: \"2022-10-18T24:00:00\",\n    isBaseTimeFormat: true,\n    theme\n  });\n\n  const handleFetchResources = React.useCallback(async () => {\n    setIsLoading(true);\n    const epg = await fetchEpg();\n    const channels = await fetchChannels();\n\n\tconst transformChannels = (channels) => {\t\t\n\t\treturn channels.map(channel => {\n\t\t\treturn {\n\t\t\t\tuuid: channel.id,\n\t\t\t\ttype: \"channel\",\n\t\t\t\ttitle: channel.name,\n\t\t\t\tlogo: channel.image,\n\t\t\t\tyear: 2002\n\t\t\t}\n\t\t});\n\t\t\n\t}\n\tconst handleGetEpg = () => {\n\t\tlet epgList = [];\n\t\tfor( let channel of channelsList ){\n\t\t\tconst events = channel.events;\n\t\t\tevents.forEach(event => {\n\t\t\t\tepgList.push({\n\t\t\t\t\tsince: new Date(event.date_begin).toISOString(),\n\t\t\t\t\ttill: new Date(event.date_end).toISOString(),\n\t\t\t\t\tid: event.id,\n\t\t\t\t\ttitle: event.name,\n\t\t\t\t\tdescription: event.description,\n\t\t\t\t\tisYesterday: true,\n\t\t\t\t\tchannelUuid: event.channel_id,\n\t\t\t\t\tType: \"series\",\n\t\t\t\t\ttotalSeasons: 1,\n\t\t\t\t\tResponse: \"True\",\n\t\t\t\t\timage: \"https://www.themoviedb.org/t/p/w1066_and_h600_bestv2/sjx6zjQI2dLGtEL0HGWsnq6UyLU.jpg\",\n\t\t\t\t\tcountry: \"Ghana\",\n\t\t\t\t\tYear: \"2021â€“\",\n\t\t\t\t\tRated: \"TV-14\",\n\t\t\t\t\tReleased: \"29 Dec 2021\",\n\t\t\t\t\tRuntime: \"N/A\",\n\t\t\t\t\tGenre: \"Action, Adventure, Sci-Fi\",\n\t\t\t\t\tDirector: \"N/A\",\n\t\t\t\t\tWriter: \"Jon Favreau\",\n\t\t\t\t\tActors: \"Temuera Morrison, Ming-Na Wen, Matt Berry\",\n\t\t\t\t\tLanguage: \"English\",\n\t\t\t\t\tCountry: \"United States\",\n\t\t\t\t\tAwards: \"N/A\",\n\t\t\t\t\tMetascore: \"N/A\",\n\t\t\t\t\timdbRating: 8.0,\n\t\t\t\t\timdbVotes: \"20,147\",\n\t\t\t\t\timdbID: \"tt13668894\",\n\t\t\t\t\tType: \"series\",\n\t\t\t\t\ttotalSeasons: \"1\",\n\t\t\t\t\tResponse: \"True\",\n\t\t\t\t\tRatings: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tSource: \"Internet Movie Database\",\n\t\t\t\t\t\t\tValue: \"8.0/10\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\trating: 3\n\t\t\t\t})\n\t\t\t} )\n\t\t\t\n\t\t}\n\t\treturn epgList;\n\t}\n\tconsole.log(\"ğŸš€ ~ file: useApp.js:121 ~ handleFetchResources ~ channelsList\", transformChannels(channelsList))\n\tconsole.log(\"ğŸš€ ~ file: useApp.js:121 ~ handleFetchResources ~ handleGetEpg\", handleGetEpg(channelsList))\n\n    setEpg(handleGetEpg(channelsList));\n    // setChannels(channels);\n\tsetChannels(transformChannels(channelsList));\n    setIsLoading(false);\n  }, []);\n\n\tReact.useEffect(() => {\n\t\thandleFetchResources();\n\t}, [handleFetchResources]);\n\n\tReact.useEffect(() => {\n\t\tsetIsLoading(true)\n\t\tdispatch(fetchAllChannels())\n\t\tsetIsLoading(false)\n\t}, [dispatch, isLoading]);\n\n  return { getEpgProps, getLayoutProps, isLoading };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}