{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useMemo } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAllChannels, transformChannels, transformEgp } from \"./helpers\";\nimport { useEpg } from \"planby\";\n\n// Import theme\nimport { theme } from \"./helpers/theme\";\nexport function useApp() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    list: channelsList\n  } = useSelector(state => state.channels);\n  const [channels, setChannels] = useState([]);\n  const [epg, setEpg] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const date = new Date();\n  const startDate = date.getUTCFullYear() + \"/\" + (\"0\" + (date.getUTCMonth() + 1)).slice(-2) + \"/\" + (\"0\" + date.getUTCDate()).slice(-2);\n  // const startDate = toISOStringWithTimezone(date).slice(0, 19)\n  // const startDate = new Date(date).toISOString()\n\n  // console.log(\"startDate\", startDate)\n\n  const channelsData = useMemo(() => channels, [channels]);\n  const epgData = useMemo(() => epg, [epg]);\n  const {\n    getEpgProps,\n    getLayoutProps\n  } = useEpg({\n    channels: channelsData,\n    epg: epgData,\n    dayWidth: 7200,\n    sidebarWidth: 100,\n    itemHeight: 80,\n    isSidebar: true,\n    isTimeline: true,\n    isLine: true,\n    startDate: startDate,\n    // endDate: \"2023-01-10T22:00:00\",\n    isBaseTimeFormat: true,\n    theme\n  });\n  const handleFetchResources = React.useCallback(async () => {\n    setIsLoading(true);\n    setChannels(transformChannels(channelsList));\n    setEpg(transformEgp(channelsList));\n    setIsLoading(false);\n  }, [channelsList]);\n  React.useEffect(() => {\n    dispatch(fetchAllChannels());\n  }, [dispatch]);\n  React.useEffect(() => {\n    handleFetchResources();\n  }, [handleFetchResources]);\n  return {\n    getEpgProps,\n    getLayoutProps,\n    isLoading\n  };\n}\n_s(useApp, \"JfeeD0nLL7/vNV3n/mZD40Mlo28=\", false, function () {\n  return [useDispatch, useSelector, useEpg];\n});","map":{"version":3,"names":["React","useState","useMemo","useDispatch","useSelector","fetchAllChannels","transformChannels","transformEgp","useEpg","theme","useApp","dispatch","list","channelsList","state","channels","setChannels","epg","setEpg","isLoading","setIsLoading","date","Date","startDate","getUTCFullYear","getUTCMonth","slice","getUTCDate","channelsData","epgData","getEpgProps","getLayoutProps","dayWidth","sidebarWidth","itemHeight","isSidebar","isTimeline","isLine","isBaseTimeFormat","handleFetchResources","useCallback","useEffect"],"sources":["/Users/anabarbosa/Code/Tests/react-redux-monkey/src/useApp.js"],"sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAllChannels, transformChannels, transformEgp } from \"./helpers\";\nimport { useEpg } from \"planby\";\n\n// Import theme\nimport { theme } from \"./helpers/theme\";\n\nexport function useApp() {\n\tconst dispatch = useDispatch();\n\tconst { list: channelsList } = useSelector(state => state.channels);\n\tconst [channels, setChannels] = useState([]);\n\tconst [epg, setEpg] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tconst date = new Date()\n\tconst startDate = date.getUTCFullYear() + \"/\" +\n    (\"0\" + (date.getUTCMonth()+1)).slice(-2) + \"/\" +\n    (\"0\" + date.getUTCDate()).slice(-2);\n\t// const startDate = toISOStringWithTimezone(date).slice(0, 19)\n\t// const startDate = new Date(date).toISOString()\n\t\n\t// console.log(\"startDate\", startDate)\n\n\tconst channelsData = useMemo(() => channels, [channels]);\n\tconst epgData = useMemo(() => epg, [epg]);\n\n\tconst { getEpgProps, getLayoutProps } = useEpg({\n\t\tchannels: channelsData,\n\t\tepg: epgData,\n\t\tdayWidth: 7200,\n\t\tsidebarWidth: 100,\n\t\titemHeight: 80,\n\t\tisSidebar: true,\n\t\tisTimeline: true,\n\t\tisLine: true,\n\t\tstartDate: startDate,\n\t\t// endDate: \"2023-01-10T22:00:00\",\n\t\tisBaseTimeFormat: true,\n\t\ttheme\n\t});\n\n\tconst handleFetchResources = React.useCallback(async () => {\n\t\tsetIsLoading(true);\n\t\tsetChannels(transformChannels(channelsList));\n\t\tsetEpg(transformEgp(channelsList));\n\t\tsetIsLoading(false);\n\t}, [channelsList]);\n\n\tReact.useEffect(() => {\n\t\tdispatch(fetchAllChannels())\n\t}, [dispatch]);\n\n\tReact.useEffect(() => {\n\t\thandleFetchResources();\n\t}, [handleFetchResources]);\n\n\n\treturn { getEpgProps, getLayoutProps, isLoading };\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAChD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,gBAAgB,EAAEC,iBAAiB,EAAEC,YAAY,QAAQ,WAAW;AAC7E,SAASC,MAAM,QAAQ,QAAQ;;AAE/B;AACA,SAASC,KAAK,QAAQ,iBAAiB;AAEvC,OAAO,SAASC,MAAM,GAAG;EAAA;EACxB,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAM;IAAES,IAAI,EAAEC;EAAa,CAAC,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAAC;EACnE,MAAM,CAACA,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,GAAG,EAAEC,MAAM,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMoB,IAAI,GAAG,IAAIC,IAAI,EAAE;EACvB,MAAMC,SAAS,GAAGF,IAAI,CAACG,cAAc,EAAE,GAAG,GAAG,GAC1C,CAAC,GAAG,IAAIH,IAAI,CAACI,WAAW,EAAE,GAAC,CAAC,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAC9C,CAAC,GAAG,GAAGL,IAAI,CAACM,UAAU,EAAE,EAAED,KAAK,CAAC,CAAC,CAAC,CAAC;EACtC;EACA;;EAEA;;EAEA,MAAME,YAAY,GAAG1B,OAAO,CAAC,MAAMa,QAAQ,EAAE,CAACA,QAAQ,CAAC,CAAC;EACxD,MAAMc,OAAO,GAAG3B,OAAO,CAAC,MAAMe,GAAG,EAAE,CAACA,GAAG,CAAC,CAAC;EAEzC,MAAM;IAAEa,WAAW;IAAEC;EAAe,CAAC,GAAGvB,MAAM,CAAC;IAC9CO,QAAQ,EAAEa,YAAY;IACtBX,GAAG,EAAEY,OAAO;IACZG,QAAQ,EAAE,IAAI;IACdC,YAAY,EAAE,GAAG;IACjBC,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE,IAAI;IACfC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE,IAAI;IACZd,SAAS,EAAEA,SAAS;IACpB;IACAe,gBAAgB,EAAE,IAAI;IACtB7B;EACD,CAAC,CAAC;EAEF,MAAM8B,oBAAoB,GAAGvC,KAAK,CAACwC,WAAW,CAAC,YAAY;IAC1DpB,YAAY,CAAC,IAAI,CAAC;IAClBJ,WAAW,CAACV,iBAAiB,CAACO,YAAY,CAAC,CAAC;IAC5CK,MAAM,CAACX,YAAY,CAACM,YAAY,CAAC,CAAC;IAClCO,YAAY,CAAC,KAAK,CAAC;EACpB,CAAC,EAAE,CAACP,YAAY,CAAC,CAAC;EAElBb,KAAK,CAACyC,SAAS,CAAC,MAAM;IACrB9B,QAAQ,CAACN,gBAAgB,EAAE,CAAC;EAC7B,CAAC,EAAE,CAACM,QAAQ,CAAC,CAAC;EAEdX,KAAK,CAACyC,SAAS,CAAC,MAAM;IACrBF,oBAAoB,EAAE;EACvB,CAAC,EAAE,CAACA,oBAAoB,CAAC,CAAC;EAG1B,OAAO;IAAET,WAAW;IAAEC,cAAc;IAAEZ;EAAU,CAAC;AAClD;AAAC,GAnDeT,MAAM;EAAA,QACJP,WAAW,EACGC,WAAW,EAiBFI,MAAM;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}