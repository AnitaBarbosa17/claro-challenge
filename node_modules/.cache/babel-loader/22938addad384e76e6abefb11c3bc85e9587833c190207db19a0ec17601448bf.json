{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n\n// import { fetchChannels, fetchEpg } from \"./helpers\";\nimport { fetchAllChannels } from \"./helpers\";\nimport { useEpg } from \"planby\";\n\n// Import theme\nimport { theme } from \"./helpers/theme\";\nimport { useDispatch, useSelector } from 'react-redux';\nexport function useApp() {\n  _s();\n  const dispatch = useDispatch();\n\n  // const [channels, setChannels] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    list: channelsList\n  } = useSelector(state => state.channels);\n  const channelsData = React.useMemo(() => channelsList, [channelsList]);\n  console.log(\"ðŸš€ ~ file: useApp.js:22 ~ useApp ~ channelsData\", channelsData);\n  useEffect(() => {\n    dispatch(fetchAllChannels());\n  }, [dispatch]);\n\n  // useEffect(() => {\n  // \t// handleFetchResources();\n  // \tsetIsLoading(true);\n  // \tsetChannels(dispatch(fetchAllChannels()));\n  // \tsetIsLoading(false);\n\n  // }, []);\n\n  //   const [channels, setChannels] = React.useState([]);\n  //   const [epg, setEpg] = React.useState([]);\n  //   const [isLoading, setIsLoading] = React.useState(false);\n\n  //   const channelsData = React.useMemo(() => channels, [channels]);\n  //   const epgData = React.useMemo(() => epg, [epg]);\n\n  //   const { getEpgProps, getLayoutProps } = useEpg({\n  // \tchannels: channelsData,\n  // \tepg: epgData,\n  // \tdayWidth: 7200,\n  // \tsidebarWidth: 100,\n  // \titemHeight: 80,\n  // \tisSidebar: true,\n  // \tisTimeline: true,\n  // \tisLine: true,\n  // \tstartDate: \"2022-10-18T00:00:00\",\n  // \tendDate: \"2022-10-18T24:00:00\",\n  // \tisBaseTimeFormat: true,\n  // \ttheme\n  //   });\n\n  //   const handleFetchResources = React.useCallback(async () => {\n  // \tsetIsLoading(true);\n  // \t// const epg = await fetchEpg();\n  // \tconst channels = fetchAllChannels();\n  // \tsetEpg(epg);\n  // \tsetChannels(channels);\n  // \tsetIsLoading(false);\n  //   }, []);\n\n  //   React.useEffect(() => {\n  // \thandleFetchResources();\n  //   }, [handleFetchResources]);\n\n  //   return { getEpgProps, getLayoutProps, isLoading };\n  return {\n    channels\n  };\n}\n_s(useApp, \"NA9nixrIyNLRYUoj7uUCql84PZA=\", false, function () {\n  return [useDispatch, useSelector];\n});","map":{"version":3,"names":["React","useEffect","useState","fetchAllChannels","useEpg","theme","useDispatch","useSelector","useApp","dispatch","isLoading","setIsLoading","list","channelsList","state","channels","channelsData","useMemo","console","log"],"sources":["/Users/anabarbosa/Code/Tests/react-redux-monkey/src/useApp.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\n\n// import { fetchChannels, fetchEpg } from \"./helpers\";\nimport { fetchAllChannels } from \"./helpers\";\n\nimport { useEpg } from \"planby\";\n\n// Import theme\nimport { theme } from \"./helpers/theme\";\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport function useApp() {\n\t\n\tconst dispatch = useDispatch();\n\n\t// const [channels, setChannels] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst { list: channelsList } = useSelector(state => state.channels);\n\t\n\tconst channelsData = React.useMemo(() => channelsList, [channelsList]);\n\tconsole.log(\"ðŸš€ ~ file: useApp.js:22 ~ useApp ~ channelsData\", channelsData)\n\t\n\tuseEffect(() => {\n\t\tdispatch(fetchAllChannels());\n\t}, [dispatch])\n\n\t// useEffect(() => {\n\t// \t// handleFetchResources();\n\t// \tsetIsLoading(true);\n\t// \tsetChannels(dispatch(fetchAllChannels()));\n\t// \tsetIsLoading(false);\n\n\t// }, []);\n\n//   const [channels, setChannels] = React.useState([]);\n//   const [epg, setEpg] = React.useState([]);\n//   const [isLoading, setIsLoading] = React.useState(false);\n\n//   const channelsData = React.useMemo(() => channels, [channels]);\n//   const epgData = React.useMemo(() => epg, [epg]);\n\n//   const { getEpgProps, getLayoutProps } = useEpg({\n// \tchannels: channelsData,\n// \tepg: epgData,\n// \tdayWidth: 7200,\n// \tsidebarWidth: 100,\n// \titemHeight: 80,\n// \tisSidebar: true,\n// \tisTimeline: true,\n// \tisLine: true,\n// \tstartDate: \"2022-10-18T00:00:00\",\n// \tendDate: \"2022-10-18T24:00:00\",\n// \tisBaseTimeFormat: true,\n// \ttheme\n//   });\n\n//   const handleFetchResources = React.useCallback(async () => {\n// \tsetIsLoading(true);\n// \t// const epg = await fetchEpg();\n// \tconst channels = fetchAllChannels();\n// \tsetEpg(epg);\n// \tsetChannels(channels);\n// \tsetIsLoading(false);\n//   }, []);\n\n//   React.useEffect(() => {\n// \thandleFetchResources();\n//   }, [handleFetchResources]);\n\n//   return { getEpgProps, getLayoutProps, isLoading };\n  \treturn { channels };\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;;AAEhD;AACA,SAASC,gBAAgB,QAAQ,WAAW;AAE5C,SAASC,MAAM,QAAQ,QAAQ;;AAE/B;AACA,SAASC,KAAK,QAAQ,iBAAiB;AAEvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAO,SAASC,MAAM,GAAG;EAAA;EAExB,MAAMC,QAAQ,GAAGH,WAAW,EAAE;;EAE9B;EACA,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAEU,IAAI,EAAEC;EAAa,CAAC,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAAC;EAEnE,MAAMC,YAAY,GAAGhB,KAAK,CAACiB,OAAO,CAAC,MAAMJ,YAAY,EAAE,CAACA,YAAY,CAAC,CAAC;EACtEK,OAAO,CAACC,GAAG,CAAC,iDAAiD,EAAEH,YAAY,CAAC;EAE5Ef,SAAS,CAAC,MAAM;IACfQ,QAAQ,CAACN,gBAAgB,EAAE,CAAC;EAC7B,CAAC,EAAE,CAACM,QAAQ,CAAC,CAAC;;EAEd;EACA;EACA;EACA;EACA;;EAEA;;EAED;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACG,OAAO;IAAEM;EAAS,CAAC;AACtB;AAAC,GA5DeP,MAAM;EAAA,QAEJF,WAAW,EAIGC,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}