{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useMemo, useCallback, useEffect } from \"react\";\nimport axios from \"axios\";\n// import { useDispatch, useSelector } from 'react-redux';\nimport { API_URL, transformChannels, transformEgp, roundMinutes, isEmpty } from \"./helpers\";\nimport { useEpg } from \"planby\";\nimport { theme } from \"./helpers/theme\";\nconst globalStyles = `\n\t.planby {\n\t\tfont-family: \"Poppins\" sans-serif;\n\t}\n`;\nexport function useApp() {\n  _s();\n  // const dispatch = useDispatch();\n  const [channelsList, setChannelsList] = useState([]);\n  const [channels, setChannels] = useState([]);\n  const [epg, setEpg] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  function fetchAllChannels() {\n    setIsLoading(true);\n    axios.get(API_URL).then(res => res.data).then(data => {\n      setChannelsList(data.response.channels);\n      setIsLoading(false);\n    });\n  }\n  const date = new Date();\n  const startDate = roundMinutes(date);\n  const channelsData = useMemo(() => channels, [channels]);\n  const epgData = useMemo(() => epg, [epg]);\n  const {\n    getEpgProps,\n    getLayoutProps\n  } = useEpg({\n    channels: channelsData,\n    epg: epgData,\n    dayWidth: 7200,\n    sidebarWidth: 150,\n    itemHeight: 80,\n    isSidebar: true,\n    isTimeline: true,\n    isLine: true,\n    startDate: startDate,\n    isBaseTimeFormat: true,\n    theme,\n    globalStyles\n  });\n  useEffect(() => {\n    fetchAllChannels();\n  }, []);\n  useEffect(() => {\n    if (channelsList.length !== 0) {\n      console.log(\"ya hay\", channelsList);\n      const formatedChannels = transformChannels(channelsList);\n      const formatedEpg = transformEgp(channelsList);\n      console.log(\"ðŸš€ ~ file: useApp.js:53 ~ handleFetchResources ~ formatedChannels\", formatedChannels);\n      console.log(\"ðŸš€ ~ file: useApp.js:53 ~ handleFetchResources ~ formatedEpg\", formatedEpg);\n      setChannels(formatedChannels);\n      setEpg(formatedEpg);\n    }\n  }, [channelsList]);\n  return {\n    getEpgProps,\n    getLayoutProps,\n    isLoading\n  };\n}\n_s(useApp, \"iut51IK9Qco3OJmWhvOhBRX+wEs=\", false, function () {\n  return [useEpg];\n});","map":{"version":3,"names":["useState","useMemo","useCallback","useEffect","axios","API_URL","transformChannels","transformEgp","roundMinutes","isEmpty","useEpg","theme","globalStyles","useApp","channelsList","setChannelsList","channels","setChannels","epg","setEpg","isLoading","setIsLoading","fetchAllChannels","get","then","res","data","response","date","Date","startDate","channelsData","epgData","getEpgProps","getLayoutProps","dayWidth","sidebarWidth","itemHeight","isSidebar","isTimeline","isLine","isBaseTimeFormat","length","console","log","formatedChannels","formatedEpg"],"sources":["/Users/anabarbosa/Code/Tests/react-redux-monkey/src/useApp.js"],"sourcesContent":["import { useState, useMemo, useCallback, useEffect } from \"react\";\nimport axios from \"axios\";\n// import { useDispatch, useSelector } from 'react-redux';\nimport { API_URL, transformChannels, transformEgp, roundMinutes, isEmpty } from \"./helpers\";\nimport { useEpg } from \"planby\";\nimport { theme } from \"./helpers/theme\";\n\nconst globalStyles = `\n\t.planby {\n\t\tfont-family: \"Poppins\" sans-serif;\n\t}\n`;\n\nexport function useApp() {\n\t// const dispatch = useDispatch();\n\tconst [channelsList, setChannelsList] = useState([]);\n\tconst [channels, setChannels] = useState([]);\n\tconst [epg, setEpg] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tfunction fetchAllChannels() {\n\t\tsetIsLoading(true)\n\t\taxios.get(API_URL)\n\t\t\t.then(res => res.data) \n\t\t\t.then(data => {\n\t\t\t\tsetChannelsList(data.response.channels);\n\t\t\t\tsetIsLoading(false);\n\t\t\t})\n\t}\n\t\n\tconst date = new Date()\n\tconst startDate = roundMinutes(date);\t\n\n\tconst channelsData = useMemo(() => channels, [channels]);\n\tconst epgData = useMemo(() => epg, [epg]);\n\n\tconst { getEpgProps, getLayoutProps } = useEpg({\n\t\tchannels: channelsData,\n\t\tepg: epgData,\n\t\tdayWidth: 7200,\n\t\tsidebarWidth: 150,\n\t\titemHeight: 80,\n\t\tisSidebar: true,\n\t\tisTimeline: true,\n\t\tisLine: true,\n\t\tstartDate: startDate,\n\t\tisBaseTimeFormat: true,\n\t\ttheme,\n\t\tglobalStyles\n\t});\n\n\tuseEffect(() => {\n\t\tfetchAllChannels();\n\t}, []);\n\t\n\tuseEffect(() => {\n\t\tif (channelsList.length !== 0) {\n\t\t\tconsole.log(\"ya hay\", channelsList)\n\t\t\tconst formatedChannels = transformChannels(channelsList)\n\t\t\tconst formatedEpg = transformEgp(channelsList)\n\t\t\tconsole.log(\"ðŸš€ ~ file: useApp.js:53 ~ handleFetchResources ~ formatedChannels\", formatedChannels)\n\t\t\tconsole.log(\"ðŸš€ ~ file: useApp.js:53 ~ handleFetchResources ~ formatedEpg\", formatedEpg)\n\t\t\tsetChannels(formatedChannels)\n\t\t\tsetEpg(formatedEpg);\n\t\t}\n\t}, [channelsList]);\n\n\treturn { getEpgProps, getLayoutProps, isLoading };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,OAAO,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA,SAASC,OAAO,EAAEC,iBAAiB,EAAEC,YAAY,EAAEC,YAAY,EAAEC,OAAO,QAAQ,WAAW;AAC3F,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,KAAK,QAAQ,iBAAiB;AAEvC,MAAMC,YAAY,GAAI;AACtB;AACA;AACA;AACA,CAAC;AAED,OAAO,SAASC,MAAM,GAAG;EAAA;EACxB;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,GAAG,EAAEC,MAAM,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAEjD,SAASsB,gBAAgB,GAAG;IAC3BD,YAAY,CAAC,IAAI,CAAC;IAClBjB,KAAK,CAACmB,GAAG,CAAClB,OAAO,CAAC,CAChBmB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CACrBF,IAAI,CAACE,IAAI,IAAI;MACbX,eAAe,CAACW,IAAI,CAACC,QAAQ,CAACX,QAAQ,CAAC;MACvCK,YAAY,CAAC,KAAK,CAAC;IACpB,CAAC,CAAC;EACJ;EAEA,MAAMO,IAAI,GAAG,IAAIC,IAAI,EAAE;EACvB,MAAMC,SAAS,GAAGtB,YAAY,CAACoB,IAAI,CAAC;EAEpC,MAAMG,YAAY,GAAG9B,OAAO,CAAC,MAAMe,QAAQ,EAAE,CAACA,QAAQ,CAAC,CAAC;EACxD,MAAMgB,OAAO,GAAG/B,OAAO,CAAC,MAAMiB,GAAG,EAAE,CAACA,GAAG,CAAC,CAAC;EAEzC,MAAM;IAAEe,WAAW;IAAEC;EAAe,CAAC,GAAGxB,MAAM,CAAC;IAC9CM,QAAQ,EAAEe,YAAY;IACtBb,GAAG,EAAEc,OAAO;IACZG,QAAQ,EAAE,IAAI;IACdC,YAAY,EAAE,GAAG;IACjBC,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE,IAAI;IACfC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE,IAAI;IACZV,SAAS,EAAEA,SAAS;IACpBW,gBAAgB,EAAE,IAAI;IACtB9B,KAAK;IACLC;EACD,CAAC,CAAC;EAEFT,SAAS,CAAC,MAAM;IACfmB,gBAAgB,EAAE;EACnB,CAAC,EAAE,EAAE,CAAC;EAENnB,SAAS,CAAC,MAAM;IACf,IAAIW,YAAY,CAAC4B,MAAM,KAAK,CAAC,EAAE;MAC9BC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE9B,YAAY,CAAC;MACnC,MAAM+B,gBAAgB,GAAGvC,iBAAiB,CAACQ,YAAY,CAAC;MACxD,MAAMgC,WAAW,GAAGvC,YAAY,CAACO,YAAY,CAAC;MAC9C6B,OAAO,CAACC,GAAG,CAAC,mEAAmE,EAAEC,gBAAgB,CAAC;MAClGF,OAAO,CAACC,GAAG,CAAC,8DAA8D,EAAEE,WAAW,CAAC;MACxF7B,WAAW,CAAC4B,gBAAgB,CAAC;MAC7B1B,MAAM,CAAC2B,WAAW,CAAC;IACpB;EACD,CAAC,EAAE,CAAChC,YAAY,CAAC,CAAC;EAElB,OAAO;IAAEmB,WAAW;IAAEC,cAAc;IAAEd;EAAU,CAAC;AAClD;AAAC,GAvDeP,MAAM;EAAA,QAuBmBH,MAAM;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}