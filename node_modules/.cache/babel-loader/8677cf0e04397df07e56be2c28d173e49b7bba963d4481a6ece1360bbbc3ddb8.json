{"ast":null,"code":"import axios from \"axios\";\nimport { setChannelList } from '../store/slices/channels';\nimport { setEpgList } from '../store/slices/epg';\nexport const toISOStringWithTimezone = date => {\n  const tzOffset = -date.getTimezoneOffset();\n  const diff = tzOffset >= 0 ? '+' : '-';\n  const pad = n => `${Math.floor(Math.abs(n))}`.padStart(2, '0');\n  return date.getFullYear() + '-' + pad(date.getMonth() + 1) + '-' + pad(date.getDate()) + 'T' + pad(date.getHours()) + ':' + pad(date.getMinutes()) + ':' + pad(date.getSeconds()) + diff + pad(tzOffset / 60) + ':' + pad(tzOffset % 60);\n};\nexport const roundMinutes = date => {\n  date.setHours(date.getHours() + Math.round(date.getMinutes() / 60));\n  date.setMinutes(0, 0, 0); // Resets also seconds and milliseconds\n  return toISOStringWithTimezone(date).slice(0, 19);\n};\nconst formatDate = date => {\n  const getDate = toISOStringWithTimezone(date);\n  return getDate.slice(-25).replace(/\\D/g, '').slice(0, 14);\n};\nconst date = new Date();\nconst dateSince = formatDate(date);\nconst dateTill = formatDate(new Date(date.setDate(date.getDate() + 1)));\nconst API_URL = `https://mfwkweb-api.clarovideo.net/services/epg/channel?device_id=web&device_category=web&device_model=web&device_type=web&device_so=Chrome&format=json&device_manufacturer=generic&authpn=webclient&authpt=tfg1h3j4k6fd7&api_version=v5.93&region=guatemala&HKS=web61144bb49d549&user_id=54343080&date_from=${dateSince}&date_to=${dateTill}&quantity=60`;\nconst transformChannels = channels => {\n  return channels.map(channel => {\n    return {\n      uuid: channel.id,\n      title: channel.name,\n      logo: channel.image,\n      number: channel.number\n    };\n  });\n};\nconst transformEgp = channels => {\n  let epgList = [];\n  for (let channel of channels) {\n    const events = channel.events;\n    events.forEach(event => {\n      epgList.push({\n        channelUuid: event.channel_id,\n        id: event.id,\n        duration: event.duration,\n        since: event.date_begin,\n        till: event.date_end,\n        title: event.name,\n        description: event.description\n      });\n    });\n  }\n  return epgList;\n};\n\n// export const fetchAllChannels = () => async dispatch => {\nexport const fetchAllChannels = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    const getChannelsList = transformChannels(response.data.response.channels);\n    console.log(\"ðŸš€ ~ file: common.js:72 ~ .then ~ getChannelsList\", getChannelsList);\n    return getChannelsList;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchEpgList = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    const getEpgList = transformEgp(response.data.response.channels);\n    console.log(\"ðŸš€ ~ file: common.js:72 ~ .then ~ getEpgList\", getEpgList);\n    return getEpgList;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const isEmpty = obj => Object.keys(obj).length === 0;","map":{"version":3,"names":["axios","setChannelList","setEpgList","toISOStringWithTimezone","date","tzOffset","getTimezoneOffset","diff","pad","n","Math","floor","abs","padStart","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","roundMinutes","setHours","round","setMinutes","slice","formatDate","replace","Date","dateSince","dateTill","setDate","API_URL","transformChannels","channels","map","channel","uuid","id","title","name","logo","image","number","transformEgp","epgList","events","forEach","event","push","channelUuid","channel_id","duration","since","date_begin","till","date_end","description","fetchAllChannels","response","get","getChannelsList","data","console","log","error","fetchEpgList","getEpgList","isEmpty","obj","Object","keys","length"],"sources":["/Users/anabarbosa/Code/Tests/react-redux-monkey/src/helpers/common.js"],"sourcesContent":["import axios from \"axios\";\nimport { setChannelList } from '../store/slices/channels';\nimport { setEpgList } from '../store/slices/epg';\n\nexport const toISOStringWithTimezone = date => {\n    const tzOffset = -date.getTimezoneOffset();\n    const diff = tzOffset >= 0 ? '+' : '-';\n    const pad = n => `${Math.floor(Math.abs(n))}`.padStart(2, '0');\n    return date.getFullYear() +\n        '-' + pad(date.getMonth() + 1) +\n        '-' + pad(date.getDate()) +\n        'T' + pad(date.getHours()) +\n        ':' + pad(date.getMinutes()) +\n        ':' + pad(date.getSeconds()) +\n        diff + pad(tzOffset / 60) +\n        ':' + pad(tzOffset % 60);\n};\n\nexport const roundMinutes = date => {\n\tdate.setHours(date.getHours() + Math.round(date.getMinutes()/60));\n\tdate.setMinutes(0, 0, 0); // Resets also seconds and milliseconds\n\treturn toISOStringWithTimezone(date).slice(0, 19);\n}\n\nconst formatDate = date => {\n    const getDate = toISOStringWithTimezone(date)\n    return getDate.slice(-25).replace(/\\D/g,'').slice(0, 14)\n}\n\nconst date = new Date();\nconst dateSince = formatDate(date)\nconst dateTill = formatDate(new Date(date.setDate(date.getDate() + 1)));\n\nconst API_URL = `https://mfwkweb-api.clarovideo.net/services/epg/channel?device_id=web&device_category=web&device_model=web&device_type=web&device_so=Chrome&format=json&device_manufacturer=generic&authpn=webclient&authpt=tfg1h3j4k6fd7&api_version=v5.93&region=guatemala&HKS=web61144bb49d549&user_id=54343080&date_from=${dateSince}&date_to=${dateTill}&quantity=60`;\n\nconst transformChannels = channels => {\t\t\n\treturn channels.map(channel => {\n\t\treturn {\n\t\t\tuuid: channel.id,\n\t\t\ttitle: channel.name,\n\t\t\tlogo: channel.image,\n\t\t\tnumber: channel.number\n\t\t}\n\t});\n}\nconst transformEgp = channels => {\n\tlet epgList = [];\n\tfor( let channel of channels ){\n\t\tconst events = channel.events;\n\t\tevents.forEach(event => {\n\t\t\tepgList.push({\n\t\t\t\tchannelUuid: event.channel_id,\n\t\t\t\tid: event.id,\n\t\t\t\tduration: event.duration,\n\t\t\t\tsince: event.date_begin,\n\t\t\t\ttill: event.date_end,\n\t\t\t\ttitle: event.name,\n\t\t\t\tdescription: event.description,\n\t\t\t})\n\t\t})\n\t\t\n\t}\n\treturn epgList;\n}\n\n// export const fetchAllChannels = () => async dispatch => {\nexport const fetchAllChannels = async () => {\n\ttry {\n        const response = await axios.get(API_URL);\n\t\tconst getChannelsList = transformChannels(response.data.response.channels);\n\t\tconsole.log(\"ðŸš€ ~ file: common.js:72 ~ .then ~ getChannelsList\", getChannelsList)\n        return getChannelsList\n\t}\n\t\n\tcatch (error) {\n\t\tconsole.log(error);\n\t}\n}\nexport const fetchEpgList = async () => {\n\ttry {\n        const response = await axios.get(API_URL);\n\t\tconst getEpgList = transformEgp(response.data.response.channels);\n\t\tconsole.log(\"ðŸš€ ~ file: common.js:72 ~ .then ~ getEpgList\", getEpgList)\n        return getEpgList\n\t}\n\t\n\tcatch (error) {\n\t\tconsole.log(error);\n\t}\n}\n\nexport const isEmpty = obj => Object.keys(obj).length === 0;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}