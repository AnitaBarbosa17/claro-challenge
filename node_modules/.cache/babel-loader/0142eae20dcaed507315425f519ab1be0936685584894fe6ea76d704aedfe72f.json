{"ast":null,"code":"var _jsxFileName = \"/Users/anabarbosa/Code/Tests/react-redux-monkey/src/helpers/common.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from 'react-redux';\n// import { fetchAllChannels } from '../helpers/common';\n\nimport { setChannelList } from '../store/slices/channels';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://mfwkweb-api.clarovideo.net/services/epg/channel?device_id=web&device_category=web&device_model=web&device_type=web&device_so=Chrome&format=json&device_manufacturer=generic&authpn=webclient&authpt=tfg1h3j4k6fd7&api_version=v5.93&region=guatemala&HKS=web61144bb49d549&user_id=54343080&date_from=20210812200256&date_to=20210813200256&quantity=200';\nexport const fetchAllChannels = () => dispatch => {\n  axios.get(API_URL).then(res => {\n    // console.log(res.data.response.channels)\n    dispatch(setChannelList(res.data.response.channels));\n  }).catch(err => console.log(err));\n};\nexport const fetchEpg = () => {\n  _s();\n  const {\n    list: channels\n  } = useSelector(state => state.channels);\n  const dispatch = useDispatch();\n  console.log(channels);\n  useEffect(() => {\n    dispatch(fetchAllChannels());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"ChannelList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), channels.map((channel, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: channel.image\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 20\n      }, this);\n    })]\n  }, void 0, true);\n};\n_s(fetchEpg, \"41HcZojebdCHHRhff+jhdPh1G8I=\", false, function () {\n  return [useSelector, useDispatch];\n});","map":{"version":3,"names":["useEffect","axios","useDispatch","useSelector","setChannelList","API_URL","fetchAllChannels","dispatch","get","then","res","data","response","channels","catch","err","console","log","fetchEpg","list","state","map","channel","idx","image"],"sources":["/Users/anabarbosa/Code/Tests/react-redux-monkey/src/helpers/common.js"],"sourcesContent":["import { useEffect } from 'react';\nimport axios from \"axios\";\n\nimport { useDispatch, useSelector } from 'react-redux';\n// import { fetchAllChannels } from '../helpers/common';\n\nimport { setChannelList } from '../store/slices/channels';\n\nconst API_URL = 'https://mfwkweb-api.clarovideo.net/services/epg/channel?device_id=web&device_category=web&device_model=web&device_type=web&device_so=Chrome&format=json&device_manufacturer=generic&authpn=webclient&authpt=tfg1h3j4k6fd7&api_version=v5.93&region=guatemala&HKS=web61144bb49d549&user_id=54343080&date_from=20210812200256&date_to=20210813200256&quantity=200';\n\nexport const fetchAllChannels = () => (dispatch) => {\n    axios.get(API_URL)\n        .then((res) => {\n            // console.log(res.data.response.channels)\n            dispatch(setChannelList(res.data.response.channels));\n        })\n        .catch((err) => console.log(err))\n}\n\nexport const fetchEpg = () => {\n    const { list: channels } = useSelector(state => state.channels);\n    const dispatch = useDispatch();\n    console.log(channels)\n    useEffect(() => {\n        dispatch(fetchAllChannels());\n    }, [dispatch])\n\n    return (<>\n        <div>ChannelList</div>\n        {channels.map((channel, idx) => {\n            return <img src={channel.image} key={idx} />\n        })}\n    </>)\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD;;AAEA,SAASC,cAAc,QAAQ,0BAA0B;AAAC;AAAA;AAE1D,MAAMC,OAAO,GAAG,iWAAiW;AAEjX,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;EAChDN,KAAK,CAACO,GAAG,CAACH,OAAO,CAAC,CACbI,IAAI,CAAEC,GAAG,IAAK;IACX;IACAH,QAAQ,CAACH,cAAc,CAACM,GAAG,CAACC,IAAI,CAACC,QAAQ,CAACC,QAAQ,CAAC,CAAC;EACxD,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACzC,CAAC;AAED,OAAO,MAAMG,QAAQ,GAAG,MAAM;EAAA;EAC1B,MAAM;IAAEC,IAAI,EAAEN;EAAS,CAAC,GAAGV,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACP,QAAQ,CAAC;EAC/D,MAAMN,QAAQ,GAAGL,WAAW,EAAE;EAC9Bc,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;EACrBb,SAAS,CAAC,MAAM;IACZO,QAAQ,CAACD,gBAAgB,EAAE,CAAC;EAChC,CAAC,EAAE,CAACC,QAAQ,CAAC,CAAC;EAEd,oBAAQ;IAAA,wBACJ;MAAA,UAAK;IAAW;MAAA;MAAA;MAAA;IAAA,QAAM,EACrBM,QAAQ,CAACQ,GAAG,CAAC,CAACC,OAAO,EAAEC,GAAG,KAAK;MAC5B,oBAAO;QAAK,GAAG,EAAED,OAAO,CAACE;MAAM,GAAMD,GAAG;QAAA;QAAA;QAAA;MAAA,QAAI;IAChD,CAAC,CAAC;EAAA,gBACH;AACP,CAAC;AAAA,GAdYL,QAAQ;EAAA,QACUf,WAAW,EACrBD,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}