{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useMemo, useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAllChannels, toISOStringWithTimezone } from \"./helpers\";\nimport { useEpg } from \"planby\";\n\n// Import theme\nimport { theme } from \"./helpers/theme\";\nexport function useApp() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    list: channelsList\n  } = useSelector(state => state.channels);\n  const {\n    list: epgList\n  } = useSelector(state => state.epg);\n  const [channels, setChannels] = useState([]);\n  const [epg, setEpg] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const date = new Date();\n  const startDate = date.getUTCFullYear() + \"/\" + (\"0\" + (date.getUTCMonth() + 1)).slice(-2) + \"/\" + (\"0\" + date.getUTCDate()).slice(-2);\n  // const startDate2 = toISOStringWithTimezone(date).slice(0, 19)\n  const startDate2 = toISOStringWithTimezone(date).slice(0, 19);\n  console.log(\"startDate\", startDate);\n  console.log(\"startDate2\", startDate2);\n  const channelsData = useMemo(() => channels, [channels]);\n  const epgData = useMemo(() => epg, [epg]);\n  const {\n    getEpgProps,\n    getLayoutProps\n  } = useEpg({\n    channels: channelsData,\n    epg: epgData,\n    dayWidth: 7200,\n    sidebarWidth: 100,\n    itemHeight: 80,\n    isSidebar: true,\n    isTimeline: true,\n    isLine: true,\n    startDate: startDate,\n    // endDate: \"2023-01-10T22:00:00\",\n    isBaseTimeFormat: true,\n    theme\n  });\n  const handleFetchResources = useCallback(async () => {\n    setChannels(channelsList);\n    setEpg(epgList);\n  }, [channelsList, epgList]);\n  useEffect(() => {\n    dispatch(fetchAllChannels());\n  }, [dispatch]);\n  useEffect(() => {\n    if (!channelsList.length && !epgList.length) {\n      setIsLoading(true);\n    } else {\n      setIsLoading(false);\n      handleFetchResources();\n    }\n  }, [handleFetchResources, channelsList, epgList]);\n  return {\n    getEpgProps,\n    getLayoutProps,\n    isLoading\n  };\n}\n_s(useApp, \"+Yomw6WUbuHXwEbdub5LZZ2bQBA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useEpg];\n});","map":{"version":3,"names":["useState","useMemo","useCallback","useEffect","useDispatch","useSelector","fetchAllChannels","toISOStringWithTimezone","useEpg","theme","useApp","dispatch","list","channelsList","state","channels","epgList","epg","setChannels","setEpg","isLoading","setIsLoading","date","Date","startDate","getUTCFullYear","getUTCMonth","slice","getUTCDate","startDate2","console","log","channelsData","epgData","getEpgProps","getLayoutProps","dayWidth","sidebarWidth","itemHeight","isSidebar","isTimeline","isLine","isBaseTimeFormat","handleFetchResources","length"],"sources":["/Users/anabarbosa/Code/Tests/react-redux-monkey/src/useApp.js"],"sourcesContent":["import { useState, useMemo, useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAllChannels, toISOStringWithTimezone } from \"./helpers\";\nimport { useEpg } from \"planby\";\n\n// Import theme\nimport { theme } from \"./helpers/theme\";\n\nexport function useApp() {\n\tconst dispatch = useDispatch();\n\tconst { list: channelsList } = useSelector(state => state.channels);\n\tconst { list: epgList } = useSelector(state => state.epg);\n\tconst [channels, setChannels] = useState([]);\n\tconst [epg, setEpg] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tconst date = new Date()\n\tconst startDate = date.getUTCFullYear() + \"/\" +\n    (\"0\" + (date.getUTCMonth()+1)).slice(-2) + \"/\" +\n    (\"0\" + date.getUTCDate()).slice(-2);\n\t// const startDate2 = toISOStringWithTimezone(date).slice(0, 19)\n\tconst startDate2 = toISOStringWithTimezone(date).slice(0, 19)\n\t\n\tconsole.log(\"startDate\", startDate)\n\tconsole.log(\"startDate2\", startDate2)\n\n\tconst channelsData = useMemo(() => channels, [channels]);\n\tconst epgData = useMemo(() => epg, [epg]);\n\n\tconst { getEpgProps, getLayoutProps } = useEpg({\n\t\tchannels: channelsData,\n\t\tepg: epgData,\n\t\tdayWidth: 7200,\n\t\tsidebarWidth: 100,\n\t\titemHeight: 80,\n\t\tisSidebar: true,\n\t\tisTimeline: true,\n\t\tisLine: true,\n\t\tstartDate: startDate,\n\t\t// endDate: \"2023-01-10T22:00:00\",\n\t\tisBaseTimeFormat: true,\n\t\ttheme\n\t});\n\n\tconst handleFetchResources = useCallback(async () => {\n\t\tsetChannels(channelsList);\n\t\tsetEpg(epgList);\n\t}, [channelsList, epgList]);\n\n\tuseEffect(() => {\n\t\tdispatch(fetchAllChannels())\n\t}, [dispatch]);\n\n\tuseEffect(() => {\n\t\tif(!channelsList.length && !epgList.length) {\n\t\t\tsetIsLoading(true);\n\t\t} else {\n\t\t\tsetIsLoading(false);\n\t\t\thandleFetchResources()\n\t\t}\n\t}, [handleFetchResources, channelsList, epgList]);\n\n\treturn { getEpgProps, getLayoutProps, isLoading };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}