{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchChannels, fetchEpg, fetchAllChannels, toISOStringWithTimezone } from \"./helpers\";\nimport { useEpg } from \"planby\";\n\n// Import theme\nimport { theme } from \"./helpers/theme\";\nconst transformChannels = channels => {\n  return channels.map(channel => {\n    return {\n      uuid: channel.id,\n      title: channel.name,\n      logo: channel.image\n    };\n  });\n};\nconst transformEgp = channels => {\n  let epgList = [];\n  for (let channel of channels) {\n    const events = channel.events;\n    events.forEach(event => {\n      epgList.push({\n        channelUuid: event.channel_id,\n        id: event.id,\n        since: event.date_begin,\n        till: event.date_end,\n        title: event.name,\n        description: event.description\n      });\n    });\n  }\n  return epgList;\n};\nexport function useApp() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    list: channelsList\n  } = useSelector(state => state.channels);\n  const [channels, setChannels] = React.useState([]);\n  const [epg, setEpg] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const date = new Date();\n  // const startDate = date.getUTCFullYear() + \"/\" +\n  // (\"0\" + (date.getUTCMonth()+1)).slice(-2) + \"/\" +\n  // (\"0\" + date.getUTCDate()).slice(-2);\n  const startDate = toISOStringWithTimezone(date).slice(0, 19);\n  // const startDate = new Date(date).toISOString()\n\n  console.log(\"startDate\", startDate);\n  const channelsData = React.useMemo(() => channels, [channels]);\n  const epgData = React.useMemo(() => epg, [epg]);\n  const {\n    getEpgProps,\n    getLayoutProps\n  } = useEpg({\n    channels: channelsData,\n    epg: epgData,\n    dayWidth: 7200,\n    sidebarWidth: 100,\n    itemHeight: 80,\n    isSidebar: true,\n    isTimeline: true,\n    isLine: true,\n    startDate: startDate,\n    endDate: \"2023-01-10T00:00:00\",\n    isBaseTimeFormat: true,\n    theme\n  });\n  const handleFetchResources = React.useCallback(async () => {\n    setIsLoading(true);\n    setChannels(transformChannels(channelsList));\n    setEpg(transformEgp(channelsList));\n    setIsLoading(false);\n  }, [channelsList]);\n  React.useEffect(() => {\n    dispatch(fetchAllChannels());\n  }, [dispatch]);\n  React.useEffect(() => {\n    handleFetchResources();\n  }, [handleFetchResources]);\n  return {\n    getEpgProps,\n    getLayoutProps,\n    isLoading\n  };\n}\n_s(useApp, \"JfeeD0nLL7/vNV3n/mZD40Mlo28=\", false, function () {\n  return [useDispatch, useSelector, useEpg];\n});","map":{"version":3,"names":["React","useDispatch","useSelector","fetchChannels","fetchEpg","fetchAllChannels","toISOStringWithTimezone","useEpg","theme","transformChannels","channels","map","channel","uuid","id","title","name","logo","image","transformEgp","epgList","events","forEach","event","push","channelUuid","channel_id","since","date_begin","till","date_end","description","useApp","dispatch","list","channelsList","state","setChannels","useState","epg","setEpg","isLoading","setIsLoading","date","Date","startDate","slice","console","log","channelsData","useMemo","epgData","getEpgProps","getLayoutProps","dayWidth","sidebarWidth","itemHeight","isSidebar","isTimeline","isLine","endDate","isBaseTimeFormat","handleFetchResources","useCallback","useEffect"],"sources":["/Users/anabarbosa/Code/Tests/react-redux-monkey/src/useApp.js"],"sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchChannels, fetchEpg, fetchAllChannels, toISOStringWithTimezone } from \"./helpers\";\nimport { useEpg } from \"planby\";\n\n// Import theme\nimport { theme } from \"./helpers/theme\";\n\n\nconst transformChannels = (channels) => {\t\t\n\treturn channels.map(channel => {\n\t\treturn {\n\t\t\tuuid: channel.id,\n\t\t\ttitle: channel.name,\n\t\t\tlogo: channel.image,\n\t\t}\n\t});\n}\nconst transformEgp = (channels) => {\n\tlet epgList = [];\n\tfor( let channel of channels ){\n\t\tconst events = channel.events;\n\t\tevents.forEach(event => {\n\t\t\tepgList.push({\n\t\t\t\tchannelUuid: event.channel_id,\n\t\t\t\tid: event.id,\n\t\t\t\tsince: event.date_begin,\n\t\t\t\ttill: event.date_end,\n\t\t\t\ttitle: event.name,\n\t\t\t\tdescription: event.description,\n\t\t\t})\n\t\t})\n\t\t\n\t}\n\treturn epgList;\n}\nexport function useApp() {\n\tconst dispatch = useDispatch();\n\tconst { list: channelsList } = useSelector(state => state.channels);\n\tconst [channels, setChannels] = React.useState([]);\n\tconst [epg, setEpg] = React.useState([]);\n\tconst [isLoading, setIsLoading] = React.useState(false);\n\n\tconst date = new Date()\n\t// const startDate = date.getUTCFullYear() + \"/\" +\n    // (\"0\" + (date.getUTCMonth()+1)).slice(-2) + \"/\" +\n    // (\"0\" + date.getUTCDate()).slice(-2);\n\tconst startDate = toISOStringWithTimezone(date).slice(0, 19)\n\t// const startDate = new Date(date).toISOString()\n\t\n\tconsole.log(\"startDate\", startDate)\n\n\tconst channelsData = React.useMemo(() => channels, [channels]);\n\tconst epgData = React.useMemo(() => epg, [epg]);\n\n\tconst { getEpgProps, getLayoutProps } = useEpg({\n\t\tchannels: channelsData,\n\t\tepg: epgData,\n\t\tdayWidth: 7200,\n\t\tsidebarWidth: 100,\n\t\titemHeight: 80,\n\t\tisSidebar: true,\n\t\tisTimeline: true,\n\t\tisLine: true,\n\t\tstartDate: startDate,\n\t\tendDate: \"2023-01-10T00:00:00\",\n\t\tisBaseTimeFormat: true,\n\t\ttheme\n\t});\n\n\tconst handleFetchResources = React.useCallback(async () => {\n\t\tsetIsLoading(true);\n\t\tsetChannels(transformChannels(channelsList));\n\t\tsetEpg(transformEgp(channelsList));\n\t\tsetIsLoading(false);\n\t}, [channelsList]);\n\n\tReact.useEffect(() => {\n\t\tdispatch(fetchAllChannels())\n\t}, [dispatch]);\n\n\tReact.useEffect(() => {\n\t\thandleFetchResources();\n\t}, [handleFetchResources]);\n\n\n  return { getEpgProps, getLayoutProps, isLoading };\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,aAAa,EAAEC,QAAQ,EAAEC,gBAAgB,EAAEC,uBAAuB,QAAQ,WAAW;AAC9F,SAASC,MAAM,QAAQ,QAAQ;;AAE/B;AACA,SAASC,KAAK,QAAQ,iBAAiB;AAGvC,MAAMC,iBAAiB,GAAIC,QAAQ,IAAK;EACvC,OAAOA,QAAQ,CAACC,GAAG,CAACC,OAAO,IAAI;IAC9B,OAAO;MACNC,IAAI,EAAED,OAAO,CAACE,EAAE;MAChBC,KAAK,EAAEH,OAAO,CAACI,IAAI;MACnBC,IAAI,EAAEL,OAAO,CAACM;IACf,CAAC;EACF,CAAC,CAAC;AACH,CAAC;AACD,MAAMC,YAAY,GAAIT,QAAQ,IAAK;EAClC,IAAIU,OAAO,GAAG,EAAE;EAChB,KAAK,IAAIR,OAAO,IAAIF,QAAQ,EAAE;IAC7B,MAAMW,MAAM,GAAGT,OAAO,CAACS,MAAM;IAC7BA,MAAM,CAACC,OAAO,CAACC,KAAK,IAAI;MACvBH,OAAO,CAACI,IAAI,CAAC;QACZC,WAAW,EAAEF,KAAK,CAACG,UAAU;QAC7BZ,EAAE,EAAES,KAAK,CAACT,EAAE;QACZa,KAAK,EAAEJ,KAAK,CAACK,UAAU;QACvBC,IAAI,EAAEN,KAAK,CAACO,QAAQ;QACpBf,KAAK,EAAEQ,KAAK,CAACP,IAAI;QACjBe,WAAW,EAAER,KAAK,CAACQ;MACpB,CAAC,CAAC;IACH,CAAC,CAAC;EAEH;EACA,OAAOX,OAAO;AACf,CAAC;AACD,OAAO,SAASY,MAAM,GAAG;EAAA;EACxB,MAAMC,QAAQ,GAAGhC,WAAW,EAAE;EAC9B,MAAM;IAAEiC,IAAI,EAAEC;EAAa,CAAC,GAAGjC,WAAW,CAACkC,KAAK,IAAIA,KAAK,CAAC1B,QAAQ,CAAC;EACnE,MAAM,CAACA,QAAQ,EAAE2B,WAAW,CAAC,GAAGrC,KAAK,CAACsC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGxC,KAAK,CAACsC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAG1C,KAAK,CAACsC,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMK,IAAI,GAAG,IAAIC,IAAI,EAAE;EACvB;EACG;EACA;EACH,MAAMC,SAAS,GAAGvC,uBAAuB,CAACqC,IAAI,CAAC,CAACG,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EAC5D;;EAEAC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,SAAS,CAAC;EAEnC,MAAMI,YAAY,GAAGjD,KAAK,CAACkD,OAAO,CAAC,MAAMxC,QAAQ,EAAE,CAACA,QAAQ,CAAC,CAAC;EAC9D,MAAMyC,OAAO,GAAGnD,KAAK,CAACkD,OAAO,CAAC,MAAMX,GAAG,EAAE,CAACA,GAAG,CAAC,CAAC;EAE/C,MAAM;IAAEa,WAAW;IAAEC;EAAe,CAAC,GAAG9C,MAAM,CAAC;IAC9CG,QAAQ,EAAEuC,YAAY;IACtBV,GAAG,EAAEY,OAAO;IACZG,QAAQ,EAAE,IAAI;IACdC,YAAY,EAAE,GAAG;IACjBC,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE,IAAI;IACfC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE,IAAI;IACZd,SAAS,EAAEA,SAAS;IACpBe,OAAO,EAAE,qBAAqB;IAC9BC,gBAAgB,EAAE,IAAI;IACtBrD;EACD,CAAC,CAAC;EAEF,MAAMsD,oBAAoB,GAAG9D,KAAK,CAAC+D,WAAW,CAAC,YAAY;IAC1DrB,YAAY,CAAC,IAAI,CAAC;IAClBL,WAAW,CAAC5B,iBAAiB,CAAC0B,YAAY,CAAC,CAAC;IAC5CK,MAAM,CAACrB,YAAY,CAACgB,YAAY,CAAC,CAAC;IAClCO,YAAY,CAAC,KAAK,CAAC;EACpB,CAAC,EAAE,CAACP,YAAY,CAAC,CAAC;EAElBnC,KAAK,CAACgE,SAAS,CAAC,MAAM;IACrB/B,QAAQ,CAAC5B,gBAAgB,EAAE,CAAC;EAC7B,CAAC,EAAE,CAAC4B,QAAQ,CAAC,CAAC;EAEdjC,KAAK,CAACgE,SAAS,CAAC,MAAM;IACrBF,oBAAoB,EAAE;EACvB,CAAC,EAAE,CAACA,oBAAoB,CAAC,CAAC;EAGzB,OAAO;IAAEV,WAAW;IAAEC,cAAc;IAAEZ;EAAU,CAAC;AACnD;AAAC,GAnDeT,MAAM;EAAA,QACJ/B,WAAW,EACGC,WAAW,EAiBFK,MAAM;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}