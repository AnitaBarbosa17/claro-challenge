{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\n\n// import { fetchChannels, fetchEpg } from \"./helpers\";\nimport { fetchAllChannels } from \"./helpers\";\nimport { useEpg } from \"planby\";\n\n// Import theme\nimport { theme } from \"./helpers/theme\";\nimport { useDispatch, useSelector } from 'react-redux';\nexport function useApp() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    list: channelsList\n  } = useSelector(state => state.channels);\n  const [epg, setEpg] = React.useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const channelsData = React.useMemo(() => channelsList, [channelsList]);\n  const epgData = React.useMemo(() => epg, [epg]);\n  console.log(\"ðŸš€ ~ file: useApp.js:23 ~ useApp ~ epgData\", epgData);\n  const handleGetEpg = () => {\n    let epgList = [];\n    for (let channel of channelsData) {\n      const events = channel.events; // console.log(channel)\n      events.forEach(event => epgList.push(event));\n    }\n    return epgList;\n  };\n  const {\n    getEpgProps,\n    getLayoutProps\n  } = useEpg({\n    channels: channelsData,\n    epg: epgData,\n    dayWidth: 7200,\n    sidebarWidth: 100,\n    itemHeight: 80,\n    isSidebar: true,\n    isTimeline: true,\n    isLine: true,\n    isBaseTimeFormat: true,\n    theme\n  });\n  useEffect(() => {\n    setEpg(handleGetEpg());\n  }, []);\n  useEffect(() => {\n    setIsLoading(true);\n    dispatch(fetchAllChannels());\n    setIsLoading(false);\n  }, [dispatch, isLoading]);\n  return {\n    getEpgProps,\n    getLayoutProps,\n    isLoading\n  };\n}\n_s(useApp, \"ChShWG2L/4xM2r2iLvIj/KBFPjs=\", false, function () {\n  return [useDispatch, useSelector, useEpg];\n});","map":{"version":3,"names":["React","useCallback","useEffect","useState","fetchAllChannels","useEpg","theme","useDispatch","useSelector","useApp","dispatch","list","channelsList","state","channels","epg","setEpg","isLoading","setIsLoading","channelsData","useMemo","epgData","console","log","handleGetEpg","epgList","channel","events","forEach","event","push","getEpgProps","getLayoutProps","dayWidth","sidebarWidth","itemHeight","isSidebar","isTimeline","isLine","isBaseTimeFormat"],"sources":["/Users/anabarbosa/Code/Tests/react-redux-monkey/src/useApp.js"],"sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\";\n\n// import { fetchChannels, fetchEpg } from \"./helpers\";\nimport { fetchAllChannels } from \"./helpers\";\n\nimport { useEpg } from \"planby\";\n\n// Import theme\nimport { theme } from \"./helpers/theme\";\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport function useApp() {\n\t\n\tconst dispatch = useDispatch();\n\n\tconst { list: channelsList } = useSelector(state => state.channels);\n\tconst [epg, setEpg] = React.useState([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\t\n\tconst channelsData = React.useMemo(() => channelsList, [channelsList]);\n\tconst epgData = React.useMemo(() => epg, [epg]);\n\tconsole.log(\"ðŸš€ ~ file: useApp.js:23 ~ useApp ~ epgData\", epgData)\n\n\tconst handleGetEpg = () => {\n\t\tlet epgList = [];\n\t\tfor( let channel of channelsData ){\n\t\t\tconst events = channel.events// console.log(channel)\n\t\t\tevents.forEach(event => epgList.push(event) )\n\t\t\t\n\t\t}\n\t\treturn epgList;\n\t}\n\n\tconst { getEpgProps, getLayoutProps } = useEpg({\n\t\tchannels: channelsData,\n\t\tepg: epgData,\n\t\tdayWidth: 7200,\n\t\tsidebarWidth: 100,\n\t\titemHeight: 80,\n\t\tisSidebar: true,\n\t\tisTimeline: true,\n\t\tisLine: true,\n\t\tisBaseTimeFormat: true,\n\t\ttheme\n\t});\n\n\tuseEffect(() => {\n\t\tsetEpg(handleGetEpg())\n\t}, []);\n\t\n\tuseEffect(() => {\n\t\tsetIsLoading(true)\n\t\tdispatch(fetchAllChannels())\n\t\tsetIsLoading(false)\n\t}, [dispatch, isLoading]);\n\n\treturn { getEpgProps, getLayoutProps, isLoading };\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;;AAE7D;AACA,SAASC,gBAAgB,QAAQ,WAAW;AAE5C,SAASC,MAAM,QAAQ,QAAQ;;AAE/B;AACA,SAASC,KAAK,QAAQ,iBAAiB;AAEvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAO,SAASC,MAAM,GAAG;EAAA;EAExB,MAAMC,QAAQ,GAAGH,WAAW,EAAE;EAE9B,MAAM;IAAEI,IAAI,EAAEC;EAAa,CAAC,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAAC;EACnE,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGhB,KAAK,CAACG,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMgB,YAAY,GAAGnB,KAAK,CAACoB,OAAO,CAAC,MAAMR,YAAY,EAAE,CAACA,YAAY,CAAC,CAAC;EACtE,MAAMS,OAAO,GAAGrB,KAAK,CAACoB,OAAO,CAAC,MAAML,GAAG,EAAE,CAACA,GAAG,CAAC,CAAC;EAC/CO,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEF,OAAO,CAAC;EAElE,MAAMG,YAAY,GAAG,MAAM;IAC1B,IAAIC,OAAO,GAAG,EAAE;IAChB,KAAK,IAAIC,OAAO,IAAIP,YAAY,EAAE;MACjC,MAAMQ,MAAM,GAAGD,OAAO,CAACC,MAAM;MAC7BA,MAAM,CAACC,OAAO,CAACC,KAAK,IAAIJ,OAAO,CAACK,IAAI,CAACD,KAAK,CAAC,CAAE;IAE9C;IACA,OAAOJ,OAAO;EACf,CAAC;EAED,MAAM;IAAEM,WAAW;IAAEC;EAAe,CAAC,GAAG3B,MAAM,CAAC;IAC9CS,QAAQ,EAAEK,YAAY;IACtBJ,GAAG,EAAEM,OAAO;IACZY,QAAQ,EAAE,IAAI;IACdC,YAAY,EAAE,GAAG;IACjBC,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE,IAAI;IACfC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE,IAAI;IACZC,gBAAgB,EAAE,IAAI;IACtBjC;EACD,CAAC,CAAC;EAEFJ,SAAS,CAAC,MAAM;IACfc,MAAM,CAACQ,YAAY,EAAE,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAENtB,SAAS,CAAC,MAAM;IACfgB,YAAY,CAAC,IAAI,CAAC;IAClBR,QAAQ,CAACN,gBAAgB,EAAE,CAAC;IAC5Bc,YAAY,CAAC,KAAK,CAAC;EACpB,CAAC,EAAE,CAACR,QAAQ,EAAEO,SAAS,CAAC,CAAC;EAEzB,OAAO;IAAEc,WAAW;IAAEC,cAAc;IAAEf;EAAU,CAAC;AAClD;AAAC,GA9CeR,MAAM;EAAA,QAEJF,WAAW,EAEGC,WAAW,EAkBFH,MAAM;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}