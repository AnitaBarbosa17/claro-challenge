{"ast":null,"code":"var _jsxFileName = \"/Users/anabarbosa/Code/Tests/react-redux-monkey/src/components/ChannelList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\n// import data from '../channeldata.json';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAllChannels } from '../store/slices/channels';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChannelList = () => {\n  _s();\n  const {\n    list: channels\n  } = useSelector(state => state.channels);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchAllChannels());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"ChannelList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), channels.map((channel, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: channel.image\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 20\n      }, this);\n    })]\n  }, void 0, true);\n};\n_s(ChannelList, \"41HcZojebdCHHRhff+jhdPh1G8I=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = ChannelList;\nexport default ChannelList;\nvar _c;\n$RefreshReg$(_c, \"ChannelList\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchAllChannels","ChannelList","list","channels","state","dispatch","map","channel","idx","image"],"sources":["/Users/anabarbosa/Code/Tests/react-redux-monkey/src/components/ChannelList.js"],"sourcesContent":["import React, { useEffect } from 'react'\n// import data from '../channeldata.json';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAllChannels } from '../store/slices/channels';\n\nconst ChannelList = () => {\n    \n    const { list: channels } = useSelector(state => state.channels);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchAllChannels());\n    }, [dispatch])\n    \n    return (<>\n        <div>ChannelList</div>\n        {channels.map((channel, idx) => {\n            return <img src={channel.image} key={idx} />\n        })}\n    </>)\n}\n\nexport default ChannelList"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC;AACA,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,gBAAgB,QAAQ,0BAA0B;AAAC;AAAA;AAE5D,MAAMC,WAAW,GAAG,MAAM;EAAA;EAEtB,MAAM;IAAEC,IAAI,EAAEC;EAAS,CAAC,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,QAAQ,CAAC;EAC/D,MAAME,QAAQ,GAAGP,WAAW,EAAE;EAE9BD,SAAS,CAAC,MAAM;IACZQ,QAAQ,CAACL,gBAAgB,EAAE,CAAC;EAChC,CAAC,EAAE,CAACK,QAAQ,CAAC,CAAC;EAEd,oBAAQ;IAAA,wBACJ;MAAA,UAAK;IAAW;MAAA;MAAA;MAAA;IAAA,QAAM,EACrBF,QAAQ,CAACG,GAAG,CAAC,CAACC,OAAO,EAAEC,GAAG,KAAK;MAC5B,oBAAO;QAAK,GAAG,EAAED,OAAO,CAACE;MAAM,GAAMD,GAAG;QAAA;QAAA;QAAA;MAAA,QAAI;IAChD,CAAC,CAAC;EAAA,gBACH;AACP,CAAC;AAAA,GAfKP,WAAW;EAAA,QAEcF,WAAW,EACrBD,WAAW;AAAA;AAAA,KAH1BG,WAAW;AAiBjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}