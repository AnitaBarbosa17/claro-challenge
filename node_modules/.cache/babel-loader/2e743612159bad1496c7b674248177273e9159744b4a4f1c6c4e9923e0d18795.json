{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo, useEffect, useState } from \"react\";\nimport { fetchAllChannels } from \"./helpers\";\nimport { useEpg } from \"planby\";\n// Import theme\nimport { theme } from \"./helpers/theme\";\nimport { useDispatch, useSelector } from 'react-redux';\nexport function useApp() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    list: channelsList\n  } = useSelector(state => state.channels);\n  const [epg, setEpg] = useState([]);\n  const [channels, setChannels] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const channelsData = useMemo(() => channels, [channels]);\n  const epgData = useMemo(() => epg, [epg]);\n  console.log(\"ðŸš€ ~ file: useApp.js:23 ~ useApp ~ epgData\", channelsData);\n  const handleGetEpg = () => {\n    let epgList = [];\n    for (let channel of channelsData) {\n      const events = channel.events;\n      events.forEach(event => {\n        epgList.push({\n          ...event,\n          since: new Date(event.date_begin).toISOString(),\n          till: new Date(event.date_end).toISOString(),\n          id: event.id,\n          title: event.name,\n          description: event.description,\n          isYesterday: true,\n          channelUuid: event.channel_id\n        });\n      });\n    }\n    return epgList;\n  };\n\n  // console.log(handleGetChannels())\n\n  const {\n    getEpgProps,\n    getLayoutProps\n  } = useEpg({\n    channels: channelsData,\n    epg: epgData,\n    dayWidth: 7200,\n    sidebarWidth: 100,\n    itemHeight: 80,\n    isSidebar: true,\n    isTimeline: true,\n    isLine: true,\n    startDate: \"2022-10-18T00:00:00\",\n    endDate: \"2022-10-18T24:00:00\",\n    isBaseTimeFormat: true,\n    theme\n  });\n  useEffect(() => {\n    setEpg(handleGetEpg());\n  }, []);\n  useEffect(() => {\n    const getChannelsList = channelsList.map(channel => {\n      return {\n        ...channel,\n        uuid: channel.id\n      };\n    });\n    setChannels(getChannelsList);\n  }, [channelsList]);\n  useEffect(() => {\n    setIsLoading(true);\n    dispatch(fetchAllChannels());\n    setIsLoading(false);\n  }, [dispatch, isLoading]);\n  return {\n    getEpgProps,\n    getLayoutProps,\n    isLoading\n  };\n}\n_s(useApp, \"tJinUs2E0pdTj7j+N+aAsaQYtZk=\", false, function () {\n  return [useDispatch, useSelector, useEpg];\n});","map":{"version":3,"names":["useMemo","useEffect","useState","fetchAllChannels","useEpg","theme","useDispatch","useSelector","useApp","dispatch","list","channelsList","state","channels","epg","setEpg","setChannels","isLoading","setIsLoading","channelsData","epgData","console","log","handleGetEpg","epgList","channel","events","forEach","event","push","since","Date","date_begin","toISOString","till","date_end","id","title","name","description","isYesterday","channelUuid","channel_id","getEpgProps","getLayoutProps","dayWidth","sidebarWidth","itemHeight","isSidebar","isTimeline","isLine","startDate","endDate","isBaseTimeFormat","getChannelsList","map","uuid"],"sources":["/Users/anabarbosa/Code/Tests/react-redux-monkey/src/useApp.js"],"sourcesContent":["import {useMemo, useEffect, useState} from \"react\";\nimport { fetchAllChannels } from \"./helpers\";\nimport { useEpg } from \"planby\";\n// Import theme\nimport { theme } from \"./helpers/theme\";\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport function useApp() {\n\t\n\tconst dispatch = useDispatch();\n\n\tconst { list: channelsList } = useSelector(state => state.channels);\n\tconst [epg, setEpg] = useState([]);\n\tconst [channels, setChannels] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\t\n\tconst channelsData = useMemo(() => channels, [channels]);\n\tconst epgData = useMemo(() => epg, [epg]);\n\tconsole.log(\"ðŸš€ ~ file: useApp.js:23 ~ useApp ~ epgData\", channelsData)\n\n\tconst handleGetEpg = () => {\n\t\tlet epgList = [];\n\t\tfor( let channel of channelsData ){\n\t\t\tconst events = channel.events;\n\t\t\tevents.forEach(event => {\n\t\t\t\tepgList.push({\n\t\t\t\t\t...event,\n\t\t\t\t\tsince: new Date(event.date_begin).toISOString(),\n\t\t\t\t\ttill: new Date(event.date_end).toISOString(),\n\t\t\t\t\tid: event.id,\n\t\t\t\t\ttitle: event.name,\n\t\t\t\t\tdescription: event.description,\n\t\t\t\t\tisYesterday: true,\n\t\t\t\t\tchannelUuid: event.channel_id,\n\t\t\t\t})\n\t\t\t} )\n\t\t\t\n\t\t}\n\t\treturn epgList;\n\t}\n\n\t// console.log(handleGetChannels())\n\n\tconst { getEpgProps, getLayoutProps } = useEpg({\n\t\tchannels: channelsData,\n\t\tepg: epgData,\n\t\tdayWidth: 7200,\n\t\tsidebarWidth: 100,\n\t\titemHeight: 80,\n\t\tisSidebar: true,\n\t\tisTimeline: true,\n\t\tisLine: true,\n\t\tstartDate: \"2022-10-18T00:00:00\",\n\t\tendDate: \"2022-10-18T24:00:00\",\n\t\tisBaseTimeFormat: true,\n\t\ttheme\n\t});\n\n\tuseEffect(() => {\n\t\tsetEpg(handleGetEpg())\n\t}, []);\n\t\n\tuseEffect(() => {\n\t\tconst getChannelsList = channelsList.map(channel => {\n\t\t\treturn {\n\t\t\t\t...channel,\n\t\t\t\tuuid: channel.id\n\t\t\t}\n\t\t})\n\t\tsetChannels(getChannelsList)\n\t}, [channelsList]);\n\t\n\tuseEffect(() => {\n\t\tsetIsLoading(true)\n\t\tdispatch(fetchAllChannels())\n\t\tsetIsLoading(false)\n\t}, [dispatch, isLoading]);\n\n\treturn { getEpgProps, getLayoutProps, isLoading };\n}\n"],"mappings":";AAAA,SAAQA,OAAO,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAClD,SAASC,gBAAgB,QAAQ,WAAW;AAC5C,SAASC,MAAM,QAAQ,QAAQ;AAC/B;AACA,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAO,SAASC,MAAM,GAAG;EAAA;EAExB,MAAMC,QAAQ,GAAGH,WAAW,EAAE;EAE9B,MAAM;IAAEI,IAAI,EAAEC;EAAa,CAAC,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAAC;EACnE,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACW,QAAQ,EAAEG,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMiB,YAAY,GAAGnB,OAAO,CAAC,MAAMa,QAAQ,EAAE,CAACA,QAAQ,CAAC,CAAC;EACxD,MAAMO,OAAO,GAAGpB,OAAO,CAAC,MAAMc,GAAG,EAAE,CAACA,GAAG,CAAC,CAAC;EACzCO,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEH,YAAY,CAAC;EAEvE,MAAMI,YAAY,GAAG,MAAM;IAC1B,IAAIC,OAAO,GAAG,EAAE;IAChB,KAAK,IAAIC,OAAO,IAAIN,YAAY,EAAE;MACjC,MAAMO,MAAM,GAAGD,OAAO,CAACC,MAAM;MAC7BA,MAAM,CAACC,OAAO,CAACC,KAAK,IAAI;QACvBJ,OAAO,CAACK,IAAI,CAAC;UACZ,GAAGD,KAAK;UACRE,KAAK,EAAE,IAAIC,IAAI,CAACH,KAAK,CAACI,UAAU,CAAC,CAACC,WAAW,EAAE;UAC/CC,IAAI,EAAE,IAAIH,IAAI,CAACH,KAAK,CAACO,QAAQ,CAAC,CAACF,WAAW,EAAE;UAC5CG,EAAE,EAAER,KAAK,CAACQ,EAAE;UACZC,KAAK,EAAET,KAAK,CAACU,IAAI;UACjBC,WAAW,EAAEX,KAAK,CAACW,WAAW;UAC9BC,WAAW,EAAE,IAAI;UACjBC,WAAW,EAAEb,KAAK,CAACc;QACpB,CAAC,CAAC;MACH,CAAC,CAAE;IAEJ;IACA,OAAOlB,OAAO;EACf,CAAC;;EAED;;EAEA,MAAM;IAAEmB,WAAW;IAAEC;EAAe,CAAC,GAAGxC,MAAM,CAAC;IAC9CS,QAAQ,EAAEM,YAAY;IACtBL,GAAG,EAAEM,OAAO;IACZyB,QAAQ,EAAE,IAAI;IACdC,YAAY,EAAE,GAAG;IACjBC,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE,IAAI;IACfC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE,IAAI;IACZC,SAAS,EAAE,qBAAqB;IAChCC,OAAO,EAAE,qBAAqB;IAC9BC,gBAAgB,EAAE,IAAI;IACtBhD;EACD,CAAC,CAAC;EAEFJ,SAAS,CAAC,MAAM;IACfc,MAAM,CAACQ,YAAY,EAAE,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAENtB,SAAS,CAAC,MAAM;IACf,MAAMqD,eAAe,GAAG3C,YAAY,CAAC4C,GAAG,CAAC9B,OAAO,IAAI;MACnD,OAAO;QACN,GAAGA,OAAO;QACV+B,IAAI,EAAE/B,OAAO,CAACW;MACf,CAAC;IACF,CAAC,CAAC;IACFpB,WAAW,CAACsC,eAAe,CAAC;EAC7B,CAAC,EAAE,CAAC3C,YAAY,CAAC,CAAC;EAElBV,SAAS,CAAC,MAAM;IACfiB,YAAY,CAAC,IAAI,CAAC;IAClBT,QAAQ,CAACN,gBAAgB,EAAE,CAAC;IAC5Be,YAAY,CAAC,KAAK,CAAC;EACpB,CAAC,EAAE,CAACT,QAAQ,EAAEQ,SAAS,CAAC,CAAC;EAEzB,OAAO;IAAE0B,WAAW;IAAEC,cAAc;IAAE3B;EAAU,CAAC;AAClD;AAAC,GAxEeT,MAAM;EAAA,QAEJF,WAAW,EAEGC,WAAW,EAgCFH,MAAM;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}